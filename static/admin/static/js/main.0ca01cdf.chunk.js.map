{"version":3,"sources":["redux/alertSlice.js","components/AlertComponent.js","redux/authSlice.js","hooks/auth.hook.js","components/HeaderComponent.js","hooks/alert.hook.js","redux/alertTypes.js","hooks/http.hook.js","pages/LoginPage.js","components/Loader.js","pages/users/UsersPage.js","API/http.api.js","redux/categorySlice.js","pages/categories/AddCategoryModal.js","pages/categories/LoadingList.js","pages/categories/ListTree.js","pages/categories/CategoriesTree.js","pages/categories/CategoryPanel.js","pages/categories/CategoriesPage.js","redux/types.js","redux/goodsSlice.js","pages/goods/ProductImage.js","pages/goods/Images.js","pages/goods/GoodsPanel.js","pages/goods/GoodsTree.js","pages/goods/GoodsPage.js","pages/users/UserPage.js","pages/categories/CategoryPage.js","pages/mainPage/MainPageCard.js","pages/mainPage/MainPage.js","redux/fieldsSlice.js","pages/fields/FieldsPage.js","redux/transferSlice.js","pages/transfer/ButtonsPanel.js","pages/transfer/CategoryLoader.js","pages/transfer/CatalogWindow.js","pages/transfer/CategoryWindow.js","pages/transfer/TransferPage.js","App.js","Routes.js","redux/store.js","index.js"],"names":["alertSlice","createSlice","name","initialState","text","show","vatiant","reducers","alertSliceHide","state","alertSliceSet","payload","variant","actions","AlertComponent","useSelector","alertState","dispatch","useDispatch","Container","fluid","className","style","zIndex","Alert","onClose","dismissible","authSlice","id","authSliceLogin","_id","authSliceLogout","useAuth","itemName","login","useCallback","role","localStorage","setItem","JSON","stringify","logout","removeItem","useEffect","parse","getItem","HeaderComponent","authState","Navbar","bg","expand","to","Button","onClick","useAlert","successAlert","errorAlert","useHttp","useState","error","setError","loading","setLoading","progress","setProgress","request","url","a","method","body","headers","fetch","response","data","Error","result","ok","message","sendFormData","files","formData","FormData","Object","entries","key","value","append","i","fileKey","fileName","xhr","XMLHttpRequest","open","setRequestHeader","Promise","resolve","reject","send","upload","onprogress","event","parseInt","loaded","total","onreadystatechange","readyState","status","getFile","blob","clearError","LoginPage","pass","form","setForm","submitHandler","preventDefault","Form","onSubmit","Group","Label","Control","type","onChange","target","disabled","Spinner","animation","size","Loader","background","UsersPage","users","setUsers","getUsers","removeHandler","getAttribute","length","Table","striped","bordered","hover","map","avatar","alt","src","width","Row","Col","sm","md","console","log","fetchCategories","createAsyncThunk","_","thunkAPI","getState","Authorization","createCategory","categoriesState","addForm","parent","selectedCategory","updateCategory","description","imgSrc","then","res","cover","deleteCategory","categories","list","modalShow","photo","findInTree","obj","candidate","categorySlice","addFormNameHandler","categoryClickHandler","hideModal","showModal","resetCategoriesState","setPhoto","URL","createObjectURL","extraReducers","pending","fulfilled","rejected","setCategories","AddCategoryModal","handleClose","Modal","onHide","Dialog","Header","Title","Body","Footer","LoadingList","Placeholder","as","xs","ListTree","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","onNodeSelect","nodeIds","sx","height","flexGrow","maxWidth","overflowY","renderTree","nodes","TreeItem","nodeId","label","Array","isArray","node","CategoriesTree","CategoryPanel","Tabs","defaultActiveKey","Tab","eventKey","title","readOnly","placeholder","rows","Image","CloseButton","padding","margin","onInput","accept","fontSize","CategoriesPage","CARD_PRIMARY","CARD_SECONDARY","CARD_SUCCESS","getGoods","updateGood","goodsState","selectedProduct","deleted","deletedPhotos","photos","addedPhotos","file","File","img","push","moySkladSync","rmPhoto","setTimeout","rcPhoto","toString","activeTab","goods","loadedPhotos","goodsSlice","addPhotos","added","concat","moveImg","hoverIndex","moveIndex","item","splice","productClickHandler","images","isGood","tabChange","resetGoods","meta","index","arg","idx","classList","filter","setPhotoState","ProductImage","ref","useRef","useDrop","current","drop","useDrag","drag","Card","dataset","xmlns","fill","viewBox","fillRule","d","Images","minHeight","sources","from","multiple","GoodsPanel","tabHandler","activeKey","onSelect","DndProvider","backend","HTML5Backend","GoodsTree","GoodsPage","OverlayTrigger","placement","delay","hide","overlay","Tooltip","UserPage","view","edit","rights","setRights","isLoading","setIsLoading","params","useParams","getUserById","user","checkboxHandler","checked","createHandler","updateHandler","span","offset","ListGroup","Item","Check","inline","CategoryPage","Img","Text","MainPageCard","header","link","border","MainPage","getFields","saveChanges","fieldsState","addedFields","removedFields","fieldsSlice","fields","addFormHandler","field","addField","removeField","cancelRemove","cancelAdd","FieldsPage","changeHandler","cancelRemoveHandler","cancelAddHandler","removed","some","Select","getCategory","getParentCategory","getCatalog","getParentCatalog","transfer","transferState","products","categoryChecked","categoryId","selectedCatalog","unTransfer","catalogChecked","catalog","category","categoryFilter","catalogLoading","categoryLoading","transferSlice","catalogCheck","findIndex","categoryCheck","reset","selectCatalog","selectCategory","every","ButtonsPanel","CatalogWindow","goodHandler","catalogHandler","CategoryWindow","categoryHandler","TransferPage","maxHeight","App","routes","path","exact","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.0ca01cdf.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const alertSlice = createSlice({\r\n    name: 'alertSlice',\r\n    initialState: {\r\n        text: '',\r\n        show: false,\r\n        vatiant: 'success'\r\n    },\r\n    reducers: {\r\n        alertSliceHide: state => ({...state, text: '', show: false}),\r\n        alertSliceSet: (state, {payload}) => ({...state, text: payload.text, show: true, variant: payload.variant})\r\n    }\r\n})\r\n\r\nexport const { alertSliceHide, alertSliceSet } = alertSlice.actions\r\n\r\nexport default alertSlice.reducer","import React from \"react\"\r\nimport { Alert, Container } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { alertSliceHide } from \"../redux/alertSlice\"\r\n\r\nexport const AlertComponent = () => {\r\n    const { show, text, variant }  = useSelector(state => state.alertState)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Container fluid className={`position-fixed top-0 left-0 right-0 p-1 m-0`} style={{ zIndex: 1080 }}>\r\n            <Alert show={show} variant={variant} onClose={() => dispatch(alertSliceHide())} dismissible>\r\n                {text}\r\n            </Alert>\r\n        </Container>\r\n    )\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n    name: 'authSlice',\r\n    initialState: {\r\n        id: null,\r\n        name: ''\r\n    },\r\n    reducers: {\r\n        authSliceLogin: (state, {payload}) => ({...state, id: payload._id, name: payload.name}),\r\n        authSliceLogout: state => ({...state, id: null})\r\n    }\r\n})\r\n\r\nexport const { authSliceLogin, authSliceLogout } = authSlice.actions\r\n\r\nexport default authSlice.reducer","import { useCallback, useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { authSliceLogin, authSliceLogout } from \"../redux/authSlice\"\r\n\r\nexport const useAuth = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const itemName = 'drobot-shop-admin'\r\n\r\n    const login = useCallback(({_id, name, role}) => {\r\n        dispatch(authSliceLogin({_id, name, role}))\r\n        localStorage.setItem(itemName,  JSON.stringify({ _id, name, role }))\r\n    }, [dispatch])\r\n\r\n    const logout = useCallback(() => {\r\n        dispatch(authSliceLogout())\r\n        localStorage.removeItem(itemName)\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const { _id, name, role } = JSON.parse(localStorage.getItem(itemName))\r\n            if ( _id ) {\r\n                login({_id, name, role})\r\n            }\r\n        }\r\n        catch {}\r\n    }, [login])\r\n\r\n    return { login, logout }\r\n}","import React from \"react\"\r\nimport { Button, Navbar } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { useAuth } from \"../hooks/auth.hook\"\r\n\r\nexport const HeaderComponent = () => {\r\n    const { id, name } = useSelector(state => state.authState)\r\n    const { logout } = useAuth()\r\n    \r\n    if ( !id ) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\" className=\"px-1\">\r\n            <span className=\"text-secondary me-3\">{name}</span>\r\n            <NavLink to=\"/admin/main\" className=\"mx-3\">Главная</NavLink>\r\n            <Button variant=\"link\" className=\"ms-auto\" onClick={logout}>Выход</Button>\r\n        </Navbar>\r\n    )\r\n}","import { useCallback } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { alertSliceSet } from \"../redux/alertSlice\"\r\nimport { ALERT_VARIANT_ERROR, ALERT_VARIANT_SUCCESS } from \"../redux/alertTypes\"\r\n\r\nexport const useAlert = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const successAlert = useCallback(text => {\r\n        dispatch(alertSliceSet({ text, variant: ALERT_VARIANT_SUCCESS }))\r\n    }, [dispatch])\r\n\r\n    const errorAlert = useCallback(text => {\r\n        dispatch(alertSliceSet({ text, variant: ALERT_VARIANT_ERROR }))\r\n    }, [dispatch])\r\n\r\n    return { successAlert, errorAlert }\r\n}","export const ALERT_VARIANT_SUCCESS = 'success'\r\nexport const ALERT_VARIANT_ERROR = 'danger'","import { useCallback, useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useAlert } from \"./alert.hook\"\r\n\r\nexport const useHttp = () => {\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [progress, setProgress] = useState(0)\r\n    const { errorAlert } = useAlert()\r\n    const { id } = useSelector(state => state.authState)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        headers['Content-Type'] = 'application/json'\r\n        headers['Authorization'] = `Base ${id}`\r\n        if ( body ) body = JSON.stringify(body)\r\n        try {\r\n            const response = await fetch(url, { method, body, headers })\r\n            const data = await response.text()\r\n\r\n            try {\r\n                JSON.parse(data)\r\n            }\r\n            catch {\r\n                throw new Error('INVALID SERVER RESPONSE')\r\n            }\r\n\r\n            const result = JSON.parse(data)\r\n\r\n            if ( !response.ok ) {\r\n                throw new Error(result.message || 'SERVER ERROR')\r\n            }\r\n\r\n            setLoading(false)\r\n            return result\r\n        }\r\n        catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [id])\r\n\r\n    const sendFormData = useCallback( async (url, data, files, headers = {}) => {\r\n        const formData = new FormData()\r\n        for ( let [key, value] of Object.entries(data)) {\r\n            formData.append(key, value)\r\n        }\r\n\r\n        for (let i in files) {\r\n            const [fileKey, fileName] = Object.entries(files[i])[0]\r\n            formData.append(fileKey, fileName)\r\n        }\r\n        \r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', url)\r\n\r\n        headers['Authorization'] = `Base ${id}`\r\n        for ( let [key, value] of Object.entries(headers) ) {\r\n            xhr.setRequestHeader(key, value)\r\n        }\r\n\r\n        try {\r\n            return await new Promise((resolve, reject) => {\r\n                setProgress(0)\r\n                setLoading(true)\r\n                xhr.send(formData)\r\n                xhr.upload.onprogress = event =>  {\r\n                    setProgress(parseInt(100 * event.loaded / event.total))\r\n                }\r\n                xhr.onreadystatechange = () => {\r\n                    if (parseInt(xhr.readyState) === 4) {\r\n                        try {\r\n                            JSON.parse(xhr.response)\r\n                        }\r\n                        catch {\r\n                            reject({message: 'INVALID SERVER RESPONSE'})\r\n                        }\r\n                        const response = JSON.parse(xhr.response)\r\n                        if ( parseInt(xhr.status) < 300 ) {\r\n                            setProgress(0)\r\n                            setLoading(false)\r\n                            resolve(response)\r\n                        }\r\n                        reject(response)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        catch (e) {\r\n            setProgress(0)\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [id])\r\n\r\n    const getFile = useCallback(async (url) => {\r\n        setLoading(true)\r\n        const headers = {}\r\n        headers['Authorization'] = `Base ${id}`\r\n        try {\r\n            const response = await fetch(url, { method: 'GET', body: null, headers })\r\n            const result = await response.blob()\r\n\r\n            if ( !response.ok ) {\r\n                throw new Error(result.message || 'SERVER ERROR')\r\n            }\r\n\r\n            setLoading(false)\r\n            return result\r\n        }\r\n        catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [id])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    useEffect(() => {\r\n        if ( error ) {\r\n            errorAlert(error)\r\n            clearError()\r\n        }\r\n    }, [error, clearError, errorAlert])\r\n\r\n    return { request, sendFormData, getFile, loading, progress, error, clearError } \r\n}","import React, { useState } from \"react\";\r\nimport { Container, Form, Button, Spinner } from 'react-bootstrap'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport { useAuth } from '../hooks/auth.hook'\r\n\r\nexport const LoginPage = () => {\r\n    const [form, setForm] = useState({login: '', pass: ''})\r\n    const { request, loading } = useHttp()\r\n    const { login } = useAuth()\r\n\r\n    const submitHandler = async event => {\r\n        event.preventDefault()\r\n        try {\r\n            const {_id, name, role} = await request('/api/auth/login', 'POST', form)\r\n            login({ _id, name, role })\r\n        }\r\n        catch {}\r\n    }\r\n\r\n    return (\r\n        <Container className=\"min-vh-100 d-flex\">\r\n            <Form className=\"m-auto col-12 col-md-3\" onSubmit={submitHandler}>\r\n                <Form.Group className=\"mb-2\">\r\n                    <Form.Label>Логин</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"login\"\r\n                        value={form.login}\r\n                        onChange={event => setForm(state => ({...state, [event.target.name]: event.target.value}))}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Пароль</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"pass\"\r\n                        value={form.pass}\r\n                        onChange={event => setForm(state => ({...state, [event.target.name]: event.target.value}))}\r\n                    />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    { loading ? <Spinner animation=\"border\" variant=\"primary\" size=\"sm\" /> : 'OK' }\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport { Container, Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Container fluid className=\"position-fixed top-0 left-0 bottom-0 m-0 d-flex\" style={{ zIndex: 1060, background: 'rgba(255, 255, 255, 0.8)' }}>\r\n            <Spinner animation=\"border\" variant=\"secondary\" className=\"m-auto\" />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Row, Table } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Loader from '../../components/Loader'\r\nimport { useAlert } from '../../hooks/alert.hook'\r\nimport { useHttp } from '../../hooks/http.hook'\r\n\r\nexport const UsersPage = () => {\r\n    const [users, setUsers] = useState()\r\n    const { request, loading } = useHttp()\r\n    const { successAlert } = useAlert()\r\n\r\n    const getUsers = useCallback(async () => {\r\n        try {\r\n            const response = await request('/api/users/get-all')\r\n            setUsers(response)\r\n        }\r\n        catch {}\r\n    }, [request])\r\n\r\n    const removeHandler = async event => {\r\n        const id = event.target.getAttribute('data-id')\r\n        try {\r\n            const { message } = await request('/api/users/remove', 'POST', { id })\r\n            successAlert(message)\r\n            getUsers()\r\n        }\r\n        catch {}\r\n    }\r\n\r\n    useEffect(getUsers, [getUsers])\r\n\r\n    return (\r\n        <Container className=\"py-4\">\r\n            { loading && <Loader /> }\r\n            <h3>Пользователи</h3>\r\n            { !users?.length && <p>Список пользователей пуст</p> }\r\n            { users?.length > 0 && <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Имя</th>\r\n                        <th>Логин</th>\r\n                        <th>Изменить</th>\r\n                        <th>Удалить</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        users.map(({_id, avatar, name, login}) => (\r\n                            <tr key={_id}>\r\n                                <td>{\r\n                                    avatar && avatar !== '' && <img alt=\"avatar\" src={avatar} width=\"40\" />\r\n                                }</td>\r\n                                <td>{name}</td>\r\n                                <td>{login}</td>\r\n                                <td>\r\n                                    <NavLink className=\"btn btn-primary\" to={`/admin/users/user/${_id}`}>Изменить</NavLink>\r\n                                </td>\r\n                                <td>\r\n                                    <Button\r\n                                        variant=\"link\"\r\n                                        className=\"text-danger\"\r\n                                        onClick={removeHandler}\r\n                                        data-id={_id}\r\n                                    >Удалить</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table> }\r\n            <Row className=\"mt-3\">\r\n                <Col sm={12} md={4}>\r\n                    <NavLink to=\"/admin/users/user\" className=\"btn btn-primary\">Добавить пользователя</NavLink>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","export const request = async (url, method = 'GET', body = null, headers = {}) => {\r\n    headers['Content-Type'] = 'application/json'\r\n    if ( body ) body = JSON.stringify(body)\r\n    try {\r\n        const response = await fetch(url, { method, body, headers })\r\n        const data = await response.text()\r\n\r\n        try {\r\n            JSON.parse(data)\r\n        }\r\n        catch {\r\n            throw new Error('INVALID SERVER RESPONSE')\r\n        }\r\n\r\n        const result = JSON.parse(data)\r\n\r\n        if ( !response.ok ) {\r\n            throw new Error(result.message || 'SERVER ERROR')\r\n        }\r\n        return result\r\n    }\r\n    catch (e) {\r\n        throw e\r\n    }\r\n}\r\n\r\nexport const sendFormData = async (url, data, files, headers = {}) => {\r\n    const formData = new FormData()\r\n    for ( let [key, value] of Object.entries(data)) {\r\n        formData.append(key, value)\r\n    }\r\n    \r\n    for (let i in files) {\r\n        const [fileKey, fileName] = Object.entries(files[i])[0]\r\n        formData.append(fileKey, fileName)\r\n    }\r\n        \r\n    const xhr = new XMLHttpRequest()\r\n    xhr.open('POST', url)\r\n\r\n    for ( let [key, value] of Object.entries(headers) ) {\r\n        xhr.setRequestHeader(key, value)\r\n    }\r\n\r\n    try {\r\n        return await new Promise((resolve, reject) => {\r\n            xhr.send(formData)\r\n            xhr.onreadystatechange = () => {\r\n                if (parseInt(xhr.readyState) === 4) {\r\n                    try {\r\n                        JSON.parse(xhr.response)\r\n                    }\r\n                    catch {\r\n                        reject({message: 'INVALID SERVER RESPONSE'})\r\n                    }\r\n                    const response = JSON.parse(xhr.response)\r\n                    if ( parseInt(xhr.status) < 300 ) {\r\n                        resolve(response)\r\n                    }\r\n                    reject(response)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n        throw e\r\n    }\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { request, sendFormData } from '../API/http.api'\r\nimport { alertSliceSet } from './alertSlice'\r\n\r\nexport const fetchCategories = createAsyncThunk(\r\n    'categories/get-all',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request('/api/categories/get-all', 'GET', null, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw (e)\r\n        }\r\n    }\r\n)\r\n\r\nexport const createCategory = createAsyncThunk(\r\n    'categories/create',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState, categoriesState } = thunkAPI.getState()\r\n            const data = {\r\n                name: categoriesState.addForm.name,\r\n                parent: categoriesState.selectedCategory?._id\r\n            }\r\n            const response = await request('/api/categories/create', 'POST', data, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw (e)\r\n        }\r\n    }\r\n)\r\n\r\nexport const updateCategory = createAsyncThunk(\r\n    'categories/update-category',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState, categoriesState } = thunkAPI.getState()\r\n            const data = {\r\n                id: categoriesState.selectedCategory._id,\r\n                description: categoriesState.form.description\r\n            }\r\n            const cover = categoriesState.form.imgSrc && await fetch(categoriesState.form.imgSrc).then(res => res.blob())\r\n            const response = await sendFormData('/api/categories/update', data, [{ cover }], { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw (e)\r\n        }\r\n    }\r\n)\r\n\r\nexport const deleteCategory = createAsyncThunk(\r\n    'categories/delete-category',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState, categoriesState } = thunkAPI.getState()\r\n            const response = await request(\r\n                '/api/categories/delete', 'POST', { id: categoriesState.selectedCategory._id }, { Authorization: `Base ${authState.id}` }\r\n            )\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw (e)\r\n        }\r\n    }\r\n)\r\n\r\nconst initialState = {\r\n    addForm: { name: '' },\r\n    categories: { _id: '0' },\r\n    form: { name: '', description: '', imgSrc: null },\r\n    list: [],\r\n    loading: false,\r\n    modalShow: false,\r\n    photo: null,\r\n    selectedCategory: null\r\n}\r\n\r\nconst findInTree = (obj, id) => {\r\n    if ( obj._id === id ) return obj\r\n    for ( let i in obj.entries ) {\r\n        const candidate = findInTree(obj.entries[i], id)\r\n        if ( candidate ) return candidate\r\n    }\r\n    return null\r\n}\r\n\r\nconst categorySlice = createSlice({\r\n    name: 'categorySlice',\r\n    initialState,\r\n    reducers: {\r\n        addFormNameHandler: (state, {payload}) => ({ ...state, addForm: { ...state.addForm, name: payload } }),\r\n        categoryClickHandler: (state, {payload}) => {\r\n            const selectedCategory = findInTree(state.categories, payload)\r\n            const { name, description, imgSrc } = selectedCategory ?? {}\r\n            return { ...state, selectedCategory, form: { name, description: description ?? '', imgSrc } }\r\n        },\r\n        hideModal: state => ({ ...state, showModal: false, addForm: initialState.addForm }),\r\n        resetCategoriesState: () => initialState,\r\n        setForm: (state, {payload}) => ({ ...state, form: { ...state.form, [payload.key]: payload.value } }),\r\n        setPhoto: (state, {payload}) => ({ ...state, form: { ...state.form, imgSrc: payload ? URL.createObjectURL(payload) : null } }),\r\n        showModal: state => ({ ...state, showModal: true }),\r\n    },\r\n    extraReducers: {\r\n        [createCategory.pending]: state => ({ ...state, showModal: false, loading: true }),\r\n        [createCategory.fulfilled]: (state, {payload}) => {\r\n            return {\r\n            ...state, loading: false, categories: { ...state.categories, entries: payload }, addForm: { ...state.addForm, name: '' }\r\n        }},\r\n        [createCategory.rejected]: state => ({ ...state, loading: false }),\r\n\r\n        [deleteCategory.pending]: state => ({ ...state, loading: true }),\r\n        [deleteCategory.fulfilled]: (state, {payload}) => {\r\n            return {\r\n            ...state, loading: false, categories: { ...state.categories, entries: payload }, addForm: { ...state.addForm, name: '' },\r\n            selectedCategory: null, form: initialState.form\r\n        }},\r\n        [deleteCategory.rejected]: state => ({ ...state, loading: false }),\r\n\r\n        [fetchCategories.pending]: state => ({ ...state, loading: true }),\r\n        [fetchCategories.fulfilled]: (state, {payload}) => ({ ...state, loading: false, categories: { ...state.categories, entries: payload } }),\r\n        [fetchCategories.rejected]: state => ({ ...state, loading: false }),\r\n\r\n        [updateCategory.pending]: state => ({ ...state, loading: true }),\r\n        [updateCategory.fulfilled]: (state, {payload}) => ({ ...state, loading: false, categories: { ...state.categories, entries: payload } }),\r\n        [updateCategory.rejected]: state => ({ ...state, loading: false, categories: { _id: '0' } })\r\n    }\r\n})\r\n\r\nexport const { addFormNameHandler, categoryClickHandler, hideModal, resetCategoriesState, setCategories, setForm, setPhoto, showModal } = categorySlice.actions\r\n\r\nexport default categorySlice.reducer","import React from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addFormNameHandler, createCategory, hideModal } from '../../redux/categorySlice'\r\n\r\nconst AddCategoryModal = () => {\r\n    const { addForm, selectedCategory, showModal } = useSelector(state => state.categoriesState)\r\n    const dispatch = useDispatch()\r\n    \r\n    const handleClose = () => {\r\n        dispatch(hideModal())\r\n    }\r\n\r\n    const inputHandler = event => {\r\n        dispatch(addFormNameHandler(event.target.value))\r\n    }\r\n\r\n    const createHandler = () => {\r\n        dispatch(createCategory())\r\n    }\r\n\r\n    return (\r\n        <Modal show={showModal} onHide={handleClose} className=\"w-100\">\r\n            <Modal.Dialog>\r\n                <Modal.Header>\r\n                    <Modal.Title>Добавить подраздел в { selectedCategory?.name || \"корень сайта\" }</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Наименование</Form.Label>\r\n                            <Form.Control value={addForm.name} onChange={inputHandler} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Отмена</Button>\r\n                    <Button variant=\"primary\" onClick={createHandler}>OK</Button>\r\n                </Modal.Footer>\r\n            </Modal.Dialog>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddCategoryModal","import React from 'react'\r\nimport { Placeholder } from 'react-bootstrap'\r\n\r\nconst LoadingList = () => (\r\n    <ul className=\"w-100\">\r\n        <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n            <Placeholder xs={12} className=\"rounded h-100\" />\r\n        </Placeholder>\r\n        <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n            <Placeholder xs={12} className=\"rounded h-100\" />\r\n        </Placeholder>\r\n        <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n            <Placeholder xs={12} className=\"rounded h-100\" />\r\n            <ul className=\"w-100\">\r\n                <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n                    <Placeholder xs={12} className=\"rounded h-100\" />\r\n                </Placeholder>\r\n                <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n                    <Placeholder xs={12} className=\"rounded h-100\" />\r\n                </Placeholder>\r\n            </ul>\r\n        </Placeholder>\r\n        <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n            <Placeholder xs={12} className=\"rounded h-100\" />\r\n        </Placeholder>\r\n    </ul>\r\n)\r\n\r\nexport default LoadingList","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { categoryClickHandler } from '../../redux/categorySlice'\r\nimport TreeView from '@mui/lab/TreeView'\r\nimport TreeItem from '@mui/lab/TreeItem'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\r\n\r\nconst ListTree = () => {\r\n    const { categories } = useSelector(state => state.categoriesState)\r\n    const dispatch = useDispatch()\r\n\r\n    const selectHandler = (_, nodeIds) => {\r\n        dispatch(categoryClickHandler(nodeIds))\r\n    }\r\n\r\n    const renderTree = nodes => (\r\n        <TreeItem key={nodes._id} nodeId={nodes._id} label={nodes.name}>\r\n            {\r\n                Array.isArray(nodes.entries)\r\n                    ? nodes.entries.map(node => renderTree(node))\r\n                    : null\r\n            }\r\n        </TreeItem>\r\n    )\r\n\r\n    return (categories.entries?.length > 0) ? (\r\n        <TreeView\r\n            aria-label=\"rich object\"\r\n            defaultCollapseIcon={ <ExpandMoreIcon /> }\r\n            defaultExpanded={ ['0'] }\r\n            defaultExpandIcon={ <ChevronRightIcon /> }\r\n            onNodeSelect={selectHandler}\r\n            sx={{ height: '100%', flexGrow: 1, maxWidth: '100%', overflowY: 'auto' }}\r\n        >\r\n            { renderTree(categories) }\r\n        </TreeView>\r\n    )\r\n    : (\r\n        <p className=\"text-center\">Карта сайта пуста</p>\r\n    )\r\n}\r\n\r\nexport default ListTree","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LoadingList from './LoadingList'\r\nimport { fetchCategories } from '../../redux/categorySlice'\r\nimport ListTree from './ListTree'\r\n\r\nconst CategoriesTree = () => {\r\n    const { loading } = useSelector(state => state.categoriesState)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCategories())\r\n    }, [dispatch])\r\n\r\n    return loading ? <LoadingList/> : <ListTree />\r\n}\r\n\r\nexport default CategoriesTree","import React from 'react'\r\nimport { Button, CloseButton, Col, Form, Image, Placeholder, Row, Tab, Tabs } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteCategory, setForm, setPhoto, updateCategory } from '../../redux/categorySlice'\r\nimport AddAPhotoOutlinedIcon from '@mui/icons-material/AddAPhotoOutlined'\r\n\r\nconst CategoryPanel = () => {\r\n    const { loading, selectedCategory, form } = useSelector(state => state.categoriesState)\r\n    const dispatch = useDispatch()\r\n\r\n    const formHandler = event => {\r\n        dispatch(setForm({ key: event.target.name, value: event.target.value }))\r\n    }\r\n\r\n    const fileHandler = event => {\r\n        dispatch(setPhoto(event.target.files[0]))\r\n    }\r\n\r\n    const removePhoto = () => {\r\n        dispatch(setPhoto())\r\n    }\r\n\r\n    const updateHandler = () => {\r\n        dispatch(updateCategory())\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        dispatch(deleteCategory())\r\n    }\r\n\r\n    return loading ? (\r\n        <>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded h-100 mx-auto\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12}>\r\n                <Placeholder.Button xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12}>\r\n                <Placeholder.Button xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12} className=\"w-100 mt-auto\">\r\n                <Placeholder.Button variant=\"warning\" xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n        </>\r\n    ) :\r\n    (\r\n        <div className=\"d-flex flex-column h-100\">\r\n            <p className=\"text-center mb-3\">{selectedCategory?.name ?? 'Раздел не выбран'}</p>\r\n            { selectedCategory && \r\n                <>\r\n                    <Tabs defaultActiveKey=\"wrap\">\r\n                        <Tab eventKey=\"wrap\" title=\"Обложка\">\r\n                            <Row className=\"border border-top-0 rounded-bottom p-3 gx-2 m-0 align-items-stretch\">\r\n                                <Col sm={12} md={8}>\r\n                                    <Form>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Название</Form.Label>\r\n                                            <Form.Control type=\"text\" readOnly placeholder={form.name} />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Описание</Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"textarea\"\r\n                                                rows={3}\r\n                                                value={form.description}\r\n                                                name=\"description\"\r\n                                                onChange={formHandler}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col sm={12} md={4} className=\"d-flex\">\r\n                                    { form.imgSrc\r\n                                        ? <div className=\"position-relative\">\r\n                                            <Image src={form.imgSrc} fluid />\r\n                                            <CloseButton className=\"position-absolute top-0 end-0 bg-light m-1\" onClick={removePhoto} />\r\n                                        </div>\r\n                                        : <label className=\"m-auto w-100 d-flex\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                style={{ width: 0, height: 0, padding: 0, margin: 0 }}\r\n                                                onInput={fileHandler}\r\n                                                accept=\"image/*\"\r\n                                            />\r\n                                            <AddAPhotoOutlinedIcon className=\"m-auto text-secondary\" sx={{ fontSize: 80 }} />\r\n                                        </label>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab>\r\n                        <Tab eventKey=\"fields\" title=\"Поля\"></Tab>\r\n                    </Tabs>\r\n                    <div className=\"mt-auto w-100 d-flex justify-content-between\">\r\n                        <Button variant=\"link\" onClick={deleteHandler} className=\"text-danger\">Удалить</Button>\r\n                        <Button variant=\"primary\" onClick={updateHandler}>Сохранить</Button>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryPanel","import React, { useEffect } from 'react'\r\nimport { Button, Col, Container, Row} from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport { resetCategoriesState, showModal } from '../../redux/categorySlice'\r\nimport AddCategoryModal from './AddCategoryModal'\r\nimport CategoriesTree from './CategoriesTree'\r\nimport CategoryPanel from './CategoryPanel'\r\n\r\nexport const CategoriesPage = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const addHandler = () => {\r\n        dispatch(showModal())\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => dispatch(resetCategoriesState())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container fluid>\r\n            <AddCategoryModal />\r\n            <Container className=\"py-4\">\r\n                <Row className=\"mb-3\">\r\n                    <Col>\r\n                        <span className=\"fs-3\">Разделы и категории</span>\r\n                    </Col>\r\n                    <Col className=\"d-flex justify-content-end\">\r\n                        <Button variant=\"success\" onClick={addHandler}>Добавить раздел</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"border px-2 py-4 bg-light rounded align-items-stretch\">\r\n                    <Col xs={12} md={5}>\r\n                        <Container style={{ height: '70vh' }} className=\"bg-white rounded border overflow-scroll py-2\">\r\n                            <CategoriesTree />\r\n                        </Container>\r\n                    </Col>\r\n                    <Col xs={12} md={7}>\r\n                        <Container className=\"bg-white rounded border py-2 h-100 pe-2\" style={{ overflowY: 'scroll' }}>\r\n                            <CategoryPanel />\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}","export const CARD_PRIMARY = 'primary'\r\nexport const CARD_SECONDARY = 'secondary'\r\nexport const CARD_SUCCESS = 'success'","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport { request, sendFormData } from \"../API/http.api\"\r\nimport { alertSliceSet } from \"./alertSlice\"\r\nimport { CARD_PRIMARY, CARD_SECONDARY, CARD_SUCCESS } from './types'\r\n\r\nexport const getGoods = createAsyncThunk(\r\n    'goods/get-all',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request('/api/goods/get-all', 'GET', null, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nexport const updateGood = createAsyncThunk(\r\n    'goods/update-good',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState, goodsState } = thunkAPI.getState()\r\n            const data = {\r\n                id: goodsState.selectedProduct._id,\r\n                deleted: JSON.stringify(goodsState.deletedPhotos),\r\n                description: goodsState.form.description,\r\n                photos: JSON.stringify(goodsState.photos)\r\n            }\r\n            const files = []\r\n            for (let i in goodsState.addedPhotos) {\r\n                files.push({\r\n                    img: await fetch(goodsState.addedPhotos[i]).then(async res => {\r\n                        const blob = await res.blob()\r\n                        const file = new File([blob], goodsState.addedPhotos[i], { type: blob.type })\r\n                        return file\r\n                    })\r\n                })\r\n            }\r\n            const response = await sendFormData('/api/goods/update', data, files, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw (e)\r\n        }\r\n    }\r\n)\r\n\r\nexport const moySkladSync = createAsyncThunk(\r\n    'goods/sync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request('/api/goods/moy-sklad-sync', 'POST', null, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nexport const rmPhoto = createAsyncThunk(\r\n    '/goods/removePhoto',\r\n    async payload => {\r\n        await new Promise(resolve => setTimeout(resolve, 400))\r\n        return payload\r\n    }\r\n)\r\n\r\nexport const rcPhoto = createAsyncThunk(\r\n    '/goods/recoverPhoto',\r\n    async payload => {\r\n        await new Promise(resolve => setTimeout(resolve, 400))\r\n        return payload\r\n    }\r\n)\r\n\r\nconst findInTree = (obj, id) => {\r\n    if ( obj._id?.toString() === id?.toString() ) return obj\r\n    for ( let i in obj.entries ) {\r\n        const candidate = findInTree(obj.entries[i], id)\r\n        if ( candidate ) return candidate\r\n    }\r\n    return null\r\n}\r\n\r\nconst initialState = {\r\n    activeTab: 'wrap',\r\n    addedPhotos: [],\r\n    deletedPhotos: [],\r\n    form: { name: '', description: '' },\r\n    goods: { _id: '0' },\r\n    loadedPhotos: [],\r\n    loading: false,\r\n    photos: [],\r\n    selectedProduct: null,\r\n}\r\n\r\nconst goodsSlice = createSlice({\r\n    name: 'goodsSlice',\r\n    initialState,\r\n    reducers: {\r\n        addPhotos: (state, {payload}) => {\r\n            const photos = payload.map(src => ({ variant: CARD_SUCCESS, src, added: true }))\r\n            return {\r\n                ...state, addedPhotos: state.addedPhotos.concat(payload),\r\n                photos: state.photos.concat(photos)\r\n            }\r\n        },\r\n        moveImg: (state, {payload}) => {\r\n            const { hoverIndex, moveIndex } = payload\r\n            const photos = state.photos.map(item => item)\r\n            const moveImg = photos.splice(moveIndex, 1)\r\n            photos.splice(hoverIndex, 0, moveImg[0])\r\n            return { ...state, photos }\r\n        },\r\n        productClickHandler: (state, {payload}) => {\r\n            const selectedProduct = findInTree(state.goods, payload)\r\n            const { name, description, images, isGood } = selectedProduct\r\n            return isGood\r\n            ? {\r\n                ...state, selectedProduct,\r\n                form: { ...state.form, name, description: description ?? '' },\r\n                loadedPhotos: images,\r\n                photos: images.map(src => ({ variant: CARD_PRIMARY, src })),\r\n                deletedPhotos: [],\r\n                activeTab: initialState.activeTab\r\n            }\r\n            : { ...state, selectedProduct: null, form: initialState.form, loadedPhotos: [], photos: [], activeTab: initialState.activeTab }\r\n        },\r\n        setForm: (state, {payload}) => ({ ...state, form: { ...state.form, [payload.name]: payload.value } }),\r\n        tabChange: (state, {payload}) => ({ ...state, activeTab: payload }),\r\n        resetGoods: () => initialState\r\n    },\r\n    extraReducers: {\r\n        [getGoods.pending]: state => ({ ...state, loading: true }),\r\n        [getGoods.fulfilled]: (state, {payload}) => ({ ...state, goods: { ...state.goods, entries: payload }, loading: false }),\r\n        [getGoods.rejected]: state => ({ ...state, loading: false }),\r\n\r\n        [moySkladSync.pending]: state => ({ ...state, loading: true }),\r\n        [moySkladSync.fulfilled]: (state, {payload}) => ({ ...state, goods: { ...state.goods, entries: payload }, loading: false }),\r\n        [moySkladSync.rejected]: state => ({ ...state, loading: false }),\r\n\r\n        [rcPhoto.pending]: (state, {meta}) => ({\r\n            ...state,\r\n            photos: state.photos.map((item, index) => index === parseInt(meta.arg.idx) ? { ...item, classList: 'opacity-decrease' } : item)\r\n        }),\r\n        [rcPhoto.fulfilled]: (state, {payload}) => ({\r\n            ...state, deletedPhotos: state.deletedPhotos.filter(item => item !== state.photos[payload].src),\r\n            photos: state.photos.map((item, index) => parseInt(payload) === index ? { ...item, variant: CARD_PRIMARY, classList: null } : item)\r\n        }),\r\n\r\n        [rmPhoto.pending]: (state, {meta}) => ({\r\n            ...state,\r\n            photos: state.photos.map((item, index) => index === parseInt(meta.arg.idx) ? { ...item, classList: 'opacity-decrease' } : item)\r\n        }),\r\n        [rmPhoto.fulfilled]: (state, {payload}) => {\r\n            const { idx, loaded } = payload\r\n            return loaded === 'true' \r\n            ? {\r\n                ...state, deletedPhotos: state.deletedPhotos.concat([state.photos[parseInt(idx)].src]),\r\n                photos: state.photos.map((item, index) => parseInt(idx) === index ? { ...item, variant: CARD_SECONDARY, classList: null } : item)\r\n            }\r\n            : {\r\n                ...state, addedPhotos: state.addedPhotos.filter(item => item !== state.photos[parseInt(idx)].src),\r\n                photos: state.photos.filter((_, index) => parseInt(idx) !== index)\r\n            }\r\n        },\r\n\r\n        [updateGood.pending]: state => ({ ...state, loading: true }),\r\n        [updateGood.fulfilled]: (state, {payload}) => {\r\n            const { _id } = state.selectedProduct\r\n            const selectedProduct = findInTree({ ...initialState.goods, entries: payload }, _id.toString())\r\n            const { name, description, images } = selectedProduct\r\n            return {\r\n                ...state, selectedProduct,\r\n                goods: { ...initialState.goods, entries: payload },\r\n                form: { ...state.form, name, description: description ?? '' },\r\n                loadedPhotos: images,\r\n                photos: images.map(src => ({ variant: CARD_PRIMARY, src })),\r\n                addedPhotos: [],\r\n                deletedPhotos: [],\r\n                loading: false\r\n            }\r\n        },\r\n        [updateGood.rejected]: state => ({ ...state, loading: false }),\r\n    }\r\n})\r\n\r\nexport const { addPhotos, moveImg, productClickHandler, resetGoods, setForm, setPhotoState, tabChange } = goodsSlice.actions\r\n\r\nexport default goodsSlice.reducer","import React, { useRef } from 'react'\r\nimport { Card, CloseButton, Image } from 'react-bootstrap'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { moveImg, rcPhoto, rmPhoto } from '../../redux/goodsSlice'\r\nimport { CARD_PRIMARY, CARD_SECONDARY, CARD_SUCCESS } from '../../redux/types'\r\n\r\nconst ProductImage = ({ variant, src, index, classList }) => {\r\n    const dispatch = useDispatch()\r\n    const ref = useRef(null)\r\n\r\n    const removePhoto = event => {\r\n        dispatch(rmPhoto({\r\n            idx: event.target.dataset.index,\r\n            loaded: event.target.dataset.loaded\r\n        }))\r\n    }\r\n\r\n    const recoverPhoto = event => {\r\n        dispatch(rcPhoto(event.target.dataset.index))\r\n    }\r\n\r\n    const [_, drop] = useDrop({\r\n        accept: 'card',\r\n        hover: item => {\r\n            if ( !ref.current ) return\r\n\r\n            const moveIndex = item.index\r\n            const hoverIndex = index\r\n\r\n            if (moveIndex === hoverIndex) return\r\n            dispatch(moveImg({ moveIndex, hoverIndex }))\r\n            item.index = hoverIndex\r\n        }\r\n    })\r\n\r\n    const [a, drag] = useDrag({\r\n        type: 'card',\r\n        item: { index }\r\n    })\r\n\r\n    drag(drop(ref))\r\n\r\n    return (\r\n        <Card bg={variant} text=\"white\" className={`h-100 border-0 ${classList || \"\"}`} ref={ref}>\r\n            { variant === CARD_SUCCESS && <Card.Header>Не сохранено</Card.Header> }\r\n            { variant === CARD_PRIMARY && <Card.Header>Загружено</Card.Header> }\r\n            { variant === CARD_SECONDARY && <Card.Header>Исключено</Card.Header> }\r\n            <Card.Body className=\"position-relative d-flex product-image p-0 border-none\">\r\n                <Image src={src} fluid className=\"rounded-bottom\" />\r\n                { variant === CARD_SECONDARY ?\r\n                <button\r\n                    className=\"btn position-absolute center bg-white p-0 m-2 px-1 opacity-0\"\r\n                    data-index={index}\r\n                    onClick={recoverPhoto}\r\n                >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-clockwise\" viewBox=\"0 0 16 16\" data-index={index}>\r\n                        <path fillRule=\"evenodd\" d=\"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\"/>\r\n                        <path d=\"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\"/>\r\n                    </svg>\r\n                </button>\r\n                :\r\n                <CloseButton\r\n                    className=\"position-absolute center bg-light m-2 opacity-0\"\r\n                    data-index={index}\r\n                    onClick={removePhoto}\r\n                    data-loaded={ variant === 'primary' }\r\n                /> }\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProductImage","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Col, Placeholder, Row } from 'react-bootstrap'\r\nimport AddAPhotoOutlinedIcon from '@mui/icons-material/AddAPhotoOutlined'\r\nimport ProductImage from './ProductImage'\r\nimport { addPhotos } from '../../redux/goodsSlice'\r\n\r\nconst Images = () => {\r\n    const { loading, photos } = useSelector(state => state.goodsState)\r\n    const dispatch = useDispatch()\r\n\r\n    const fileHandler = event => {\r\n        const sources = Array.from(event.target.files).map(item => URL.createObjectURL(item))\r\n        dispatch(addPhotos(sources))\r\n    }\r\n\r\n    return loading ? \r\n    (\r\n        <Row md={3} className=\"border border-top-0 rounded-bottom g-2 m-0 align-items-stretch\">\r\n            <Col>\r\n                <div style={{ minHeight: '10vh' }} className=\"rounded\">\r\n                    <Placeholder xs={12} />\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n    : (\r\n        <Row md={3} className=\"border border-top-0 rounded-bottom g-2 m-0 align-items-stretch p-2\">\r\n            {\r\n                photos.map(({variant, src, classList}, index) => \r\n                    <Col key={`$_image_${index}`} style={{ minHeight: '20vh' }}>\r\n                        <ProductImage\r\n                            classList={classList}\r\n                            variant={variant}\r\n                            src={src}\r\n                            index={index}\r\n                        />\r\n                    </Col>\r\n                )\r\n            }\r\n            <Col>\r\n                <Card className=\"h-100\">\r\n                    <Card.Header>\r\n                        <label className=\"text-primary\">\r\n                            Добавить фото...\r\n                            { !loading && <input\r\n                                type=\"file\"\r\n                                style={{ width: 0, height: 0, padding: 0, margin: 0 }}\r\n                                onInput={fileHandler}\r\n                                accept=\"image/*\"\r\n                                multiple\r\n                            /> }\r\n                        </label>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"d-flex\">\r\n                        <AddAPhotoOutlinedIcon className=\"m-auto text-secondary\" sx={{ fontSize: 80 }} />\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Images","import React from 'react'\r\nimport { Button, Col, Form, Placeholder, Row, Tab, Tabs } from 'react-bootstrap'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setForm, tabChange, updateGood } from '../../redux/goodsSlice'\r\nimport Images from './Images'\r\n\r\nconst GoodsPanel = () => {\r\n    const { activeTab, form, loading, selectedProduct } = useSelector(state => state.goodsState)\r\n    const dispatch = useDispatch()\r\n\r\n    const formHandler = event => {\r\n        dispatch(setForm({ name: event.target.name, value: event.target.value }))\r\n    }\r\n\r\n    const updateHandler = () => {\r\n        dispatch(updateGood())\r\n    }\r\n\r\n    const tabHandler = data => {\r\n        dispatch(tabChange(data))\r\n    }\r\n\r\n    return loading ? (\r\n        <>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded h-100 mx-auto\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12}>\r\n                <Placeholder.Button xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12}>\r\n                <Placeholder.Button xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12} className=\"w-100 mt-auto\">\r\n                <Placeholder.Button variant=\"warning\" xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n        </>\r\n    ) :\r\n    (\r\n        <div className=\"d-flex flex-column h-100\">\r\n            <p className=\"text-center mb-3\">{selectedProduct?.name ?? 'Товар не выбран'}</p>\r\n            { selectedProduct && \r\n                <>\r\n                    <Tabs activeKey={activeTab} onSelect={tabHandler}>\r\n                        <Tab eventKey=\"wrap\" title=\"Обложка\" className=\"mb-3\">\r\n                            <Row className=\"border border-top-0 rounded-bottom p-3 gx-2 m-0 align-items-stretch\">\r\n                                <Col sm={12}>\r\n                                    <Form>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Название</Form.Label>\r\n                                            <Form.Control type=\"text\" readOnly placeholder={form.name} />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Описание</Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"textarea\"\r\n                                                rows={3}\r\n                                                value={form.description}\r\n                                                name=\"description\"\r\n                                                onChange={formHandler}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab>\r\n                        <Tab eventKey=\"photos\" title=\"Изображения\" className=\"mb-3\" onSelect={tabHandler}>\r\n                            <DndProvider backend={HTML5Backend}>\r\n                                <Images />\r\n                            </DndProvider>\r\n                        </Tab>\r\n                        <Tab eventKey=\"fields\" title=\"Поля\" className=\"mb-3\" onSelect={tabHandler}></Tab>\r\n                    </Tabs>\r\n                    <div className=\"mt-auto ms-auto\">\r\n                        <Button variant=\"primary\" onClick={updateHandler} disabled={!selectedProduct || loading}>Сохранить</Button>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoodsPanel","import TreeItem from '@mui/lab/TreeItem'\r\nimport TreeView from '@mui/lab/TreeView'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { productClickHandler } from '../../redux/goodsSlice'\r\nimport { Placeholder } from 'react-bootstrap'\r\n\r\nconst GoodsTree = () => {\r\n    const { goods, loading } = useSelector(state => state.goodsState)\r\n    const dispatch = useDispatch()\r\n\r\n    const selectHandler = (_, nodeIds) => {\r\n        dispatch(productClickHandler(nodeIds))\r\n    }\r\n\r\n    const renderTree = nodes => (\r\n        <TreeItem key={nodes._id} nodeId={nodes._id} label={nodes.name}>\r\n            {\r\n                Array.isArray(nodes.entries)\r\n                ? nodes.entries.map(node => renderTree(node))\r\n                : null\r\n            }\r\n        </TreeItem>\r\n    )\r\n\r\n    return loading ? (\r\n        <>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded w-100 h-100\" />\r\n            </Placeholder>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded w-100 h-100\" />\r\n            </Placeholder>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded w-100 h-100\" />\r\n            </Placeholder>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded w-100 h-100\" />\r\n            </Placeholder>\r\n        </>\r\n    ) :\r\n    (\r\n        <TreeView\r\n            aria-label=\"rich object\"\r\n            defaultCollapseIcon={ <ExpandMoreIcon /> }\r\n            defaultExpanded={ ['0'] }\r\n            defaultExpandIcon={ <ChevronRightIcon /> }\r\n            onNodeSelect={selectHandler}\r\n            sx={{ height: '100%', flexGrow: 1, maxWidth: '100%', overflowY: 'auto' }}\r\n        >\r\n            { renderTree(goods) }\r\n        </TreeView>\r\n    )\r\n}\r\n\r\nexport default GoodsTree","import React, { useEffect } from 'react'\r\nimport { Button, Col, Container, OverlayTrigger, Row, Tooltip } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getGoods, moySkladSync, resetGoods } from '../../redux/goodsSlice'\r\nimport GoodsPanel from './GoodsPanel'\r\nimport GoodsTree from './GoodsTree'\r\n\r\nexport const GoodsPage = () => {\r\n    const { loading } = useSelector(state => state.goodsState)\r\n    const dispatch = useDispatch()\r\n\r\n    const syncHandler = () => {\r\n        dispatch(moySkladSync())\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getGoods())\r\n        return () => dispatch(resetGoods())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container className=\"py-4\">\r\n            <Row className=\"mb-3\">\r\n                <Col>\r\n                    <span className=\"fs-3\">Товары</span>\r\n                </Col>\r\n                <Col className=\"d-flex justify-content-end\">\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{ show: 200, hide: 200 }}\r\n                        overlay={\r\n                            <Tooltip>\r\n                                Получение актуальной информации из ПТК \"Мой склад\".\r\n                                Синхронизируются названия и цены товаров.\r\n                            </Tooltip>\r\n                        }\r\n                    >\r\n                        <Button variant=\"success\" onClick={syncHandler} disabled={loading}>Синхронизировать с \"Мой склад\"</Button>\r\n                    </OverlayTrigger>\r\n                    \r\n                </Col>\r\n            </Row>\r\n            <Row className=\"border px-2 py-4 bg-light rounded align-items-stretch\">\r\n                <Col xs={12} md={5}>\r\n                    <Container style={{ height: '70vh' }} className=\"bg-white rounded border overflow-scroll py-2\">\r\n                        <GoodsTree />\r\n                    </Container>\r\n                </Col>\r\n                <Col xs={12} md={7}>\r\n                    <Container className=\"bg-white rounded border py-2 h-100 pe-2\" style={{ overflowY: 'scroll' }}>\r\n                        <GoodsPanel />\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, { useCallback, useEffect, useState } from \"react\"\r\nimport { Button, Col, Container, Form, ListGroup, Placeholder, Row, Spinner } from \"react-bootstrap\"\r\nimport { NavLink, useParams } from \"react-router-dom\"\r\nimport { useAlert } from \"../../hooks/alert.hook\"\r\nimport { useHttp } from \"../../hooks/http.hook\"\r\n\r\nexport const UserPage = () => {\r\n    const [form, setForm] = useState({ avatar: '', name: '', login: '', pass: '' })\r\n    const [rights, setRights] = useState([\r\n        { name: 'users', view: false, edit: false, title: 'Пользователи' },\r\n        { name: 'categories', view: false, edit: false, title: 'Категории' },\r\n        { name: 'goods', view: false, edit: false, title: 'Товары' }\r\n    ])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const {request, loading} = useHttp()\r\n    const { successAlert } = useAlert()\r\n    const params = useParams()\r\n\r\n    const getUserById = useCallback(async id => {\r\n        setIsLoading(true)\r\n        try {\r\n            const { user, rights } = await request('/api/users/get-by-id', 'POST', { id })\r\n            const { avatar, name, login } = user\r\n            setForm(state => ({ ...state, avatar, name, login }))\r\n            setRights(state => state.map(item => {\r\n                const { view, edit } = rights[item.name] ?? { view: false, edit: false }\r\n                return { ...item, view, edit }\r\n            }))\r\n            setIsLoading(false)\r\n        }\r\n        catch {\r\n            setIsLoading(false)\r\n        }\r\n    }, [request])\r\n\r\n    const checkboxHandler = event => {\r\n        const name = event.target.getAttribute('data-name')\r\n        const value = event.target.getAttribute('data-value')\r\n        const checked = event.target.checked\r\n\r\n        setRights(state => state.map(item => {\r\n            if (item.name === name) {\r\n                return { ...item, [value]: checked }\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n\r\n    const createHandler = async () => {\r\n        try {\r\n            const { message } = await request('/api/users/create', 'POST', {form, rights})\r\n            successAlert(message)\r\n            setForm({ avatar: '', name: '', login: '', pass: '' })\r\n            setRights([\r\n                { name: 'users', view: false, edit: false, title: 'Пользователи' },\r\n                { name: 'categories', view: false, edit: false, title: 'Категории' },\r\n                { name: 'goods', view: false, edit: false, title: 'Товары' }\r\n            ])\r\n        }\r\n        catch {}\r\n    }\r\n\r\n    const updateHandler = async id => {\r\n        try {\r\n            const { message } = await request('/api/users/update', 'POST', {id, form, rights})\r\n            successAlert(message)\r\n            getUserById(id)\r\n        }\r\n        catch {}\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        params.id ? updateHandler(params.id) : createHandler()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ( 'id' in params ) {\r\n            getUserById(params.id)\r\n        }\r\n    }, [params, getUserById])\r\n\r\n    return (\r\n        <Container className=\"pt-4\">\r\n            {\r\n                params.id ? \r\n                <h3>Изменение пользователя</h3> :\r\n                <h3>Создание пользователя</h3>\r\n            }\r\n            <Row className=\"my-3\">\r\n                <Col sm={12} md={5}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Имя пользователя</Form.Label>\r\n                            {\r\n                                isLoading ?\r\n                                <Placeholder as=\"p\" animation=\"wave\">\r\n                                    <Placeholder xs={12} className=\"p-3 rounded\" bg=\"secondary\" />\r\n                                </Placeholder> :\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={form.name}\r\n                                    onChange={event => setForm(state => ({...state, [event.target.name]: event.target.value}))}\r\n                                />\r\n                            }\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Логин</Form.Label>\r\n                            {\r\n                                isLoading ?\r\n                                <Placeholder as=\"p\" animation=\"wave\">\r\n                                    <Placeholder xs={12} className=\"p-3 rounded\" bg=\"secondary\" />\r\n                                </Placeholder> :\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"login\"\r\n                                    value={form.login}\r\n                                    onChange={event => setForm(state => ({...state, [event.target.name]: event.target.value}))}\r\n                                />\r\n                            }\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Пароль</Form.Label>\r\n                            {\r\n                                isLoading ?\r\n                                <Placeholder as=\"p\" animation=\"wave\">\r\n                                    <Placeholder xs={12} className=\"p-3 rounded\" bg=\"secondary\" />\r\n                                </Placeholder> :\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"pass\"\r\n                                    value={form.pass}\r\n                                    onChange={event => setForm(state => ({...state, [event.target.name]: event.target.value}))}\r\n                                />\r\n                            }\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n                <Col sm={12} md={{ span: 5, offset: 1 }}>\r\n                    <p className=\"mb-2\">Права</p>\r\n                    <ListGroup>\r\n                            {\r\n                                rights.map(({ name, title, view, edit }) => (\r\n                                    <ListGroup.Item key={`key_${name}`}>\r\n                                        <p className=\"mb-1 fw-bold\">{title}</p>\r\n                                        <Form>\r\n                                            {\r\n                                                isLoading ?\r\n                                                <Placeholder as=\"p\" animation=\"wave\">\r\n                                                    <Placeholder xs={12} md={6} className=\"p-3 rounded\" bg=\"secondary\" />\r\n                                                </Placeholder> :\r\n                                                <div>\r\n                                                    <Form.Check\r\n                                                        inline\r\n                                                        type=\"checkbox\"\r\n                                                        label=\"Просмотр\"\r\n                                                        checked={view}\r\n                                                        className=\"me-4\"\r\n                                                        data-name={name}\r\n                                                        data-value=\"view\"\r\n                                                        onChange={checkboxHandler}\r\n                                                        disabled={edit}\r\n                                                    />\r\n                                                    <Form.Check\r\n                                                        inline\r\n                                                        type=\"checkbox\"\r\n                                                        label=\"Изменение\"\r\n                                                        checked={edit}\r\n                                                        data-name={name}\r\n                                                        data-value=\"edit\"\r\n                                                        onChange={checkboxHandler}\r\n                                                        disabled={!view}\r\n                                                    />\r\n                                                </div>\r\n                                            }\r\n                                        </Form>\r\n                                    </ListGroup.Item>\r\n                                ))\r\n                            }\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {\r\n                        isLoading ?\r\n                        <Placeholder.Button variant=\"primary\" xs={2} /> :\r\n                        <Button variant=\"primary\" type=\"button\" onClick={ loading ? null : submitHandler }>\r\n                            { loading ? <Spinner animation=\"border\" variant=\"primary\" size=\"sm\" /> : 'OK' }\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                <Col>\r\n                    <NavLink to=\"/admin/users\">Назад к списку пользователей</NavLink>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport { Button, Card, Col, Container, Form, Row, Tab, Tabs } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { setPhoto } from '../../redux/categorySlice'\r\n\r\nconst CategoryPage = () => {\r\n    const { selectedCategory, form } = useSelector(state => state.categoriesState)\r\n    const dispatch = useDispatch()\r\n    \r\n    const fileHandler = event => {\r\n        dispatch(setPhoto(event.target.files[0]))\r\n    }\r\n\r\n    return (\r\n            <Container className=\"py-4\">\r\n                <h3>Добавление раздела в {selectedCategory?.name}</h3>\r\n                <Tabs defaultActiveKey=\"props\">\r\n                    <Tab eventKey=\"props\" title=\"Свойства\">\r\n                        <Row className=\"border border-top-0 rounded-bottom p-3 m-0\">\r\n                            <Col xs=\"12\" md=\"6\">\r\n                                <Form style={{ height: '60vh', overflowY: 'scroll' }} >\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Название</Form.Label>\r\n                                        <Form.Control type=\"text\"></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Описание</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows=\"6\"></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                            <Col xs=\"12\" md={{ span: 5, offset: 1 }}>\r\n                                <Card>\r\n                                    <Card.Img variant=\"top\" height=\"330\" className=\"bg-light\" src={form.imgSrc} />\r\n                                    <Card.Body>\r\n                                        <Card.Text>Изображение категории</Card.Text>\r\n                                        <label className=\"btn btn-primary\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                style={{ width: 0, height: 0, margin: 0, padding: 0 }}\r\n                                                accept=\"image/jpeg\"\r\n                                                onInput={fileHandler}\r\n                                            />\r\n                                            Имзенить\r\n                                        </label>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Tab>\r\n                    <Tab eventKey=\"fileds\" title=\"Поля\" disabled={true}>\r\n                        Поля\r\n                    </Tab>\r\n                </Tabs>\r\n                <Row className=\"mt-4 ps-4\">\r\n                    <Col>\r\n                        <Button variant=\"primary\">OK</Button>\r\n                    </Col>\r\n                    <Col className=\"d-flex\">\r\n                        <NavLink to=\"/admin/categories\" className=\"mx-auto text-center\">Назад к списку категорий...</NavLink>\r\n                    </Col>\r\n                </Row>          \r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default CategoryPage","import React from 'react'\r\nimport { Card, Col } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst MainPageCard = ({header, body, link, border}) => (\r\n    <Col>\r\n        <Card border={border} className=\"h-100\">\r\n            <Card.Header>{header}</Card.Header>\r\n            <Card.Body>{body}</Card.Body>\r\n            <Card.Footer>\r\n                <NavLink to={link}>Детали...</NavLink>\r\n            </Card.Footer>\r\n        </Card>\r\n    </Col>\r\n)\r\n\r\nexport default MainPageCard","import React from \"react\"\r\nimport { Container, Row } from \"react-bootstrap\"\r\nimport MainPageCard from \"./MainPageCard\"\r\n\r\nconst MainPage = () => (\r\n    <Container className=\"py-4\">\r\n        <Row xs={1} md={3} className=\"g-4 align-items-stretch\">\r\n            <MainPageCard \r\n                header=\"Пользователи\"\r\n                body=\"Аккаунты пользователей, допущенных к управлению магазином\"\r\n                link=\"/admin/users\"\r\n                border=\"primary\"\r\n            />\r\n            <MainPageCard \r\n                header=\"Поля\"\r\n                body=\"Список полей товаров, используемых для добавления характеристик фильтрации\"\r\n                link=\"/admin/fields\"\r\n                border=\"success\"\r\n            />\r\n            <MainPageCard \r\n                header=\"Категории\"\r\n                body=\"Архитектура каталога товаров, критерии группировки товаров на сайте\"\r\n                link=\"/admin/categories\"\r\n                border=\"warning\"\r\n            />\r\n            <MainPageCard \r\n                header=\"Товары\"\r\n                body=\"Информация о конкретных изделиях, наличии на складах и ценах\"\r\n                link=\"/admin/goods\"\r\n                border=\"danger\"\r\n            />\r\n            <MainPageCard \r\n                header=\"Трансфер\"\r\n                body=\"Импорт товаров из ПТК 'Мой склад' в карту сайта\"\r\n                link=\"/admin/transfer\"\r\n                border=\"dark\"\r\n            />\r\n        </Row>\r\n    </Container>\r\n)\r\n\r\nexport default MainPage","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport { request } from \"../API/http.api\"\r\nimport { alertSliceSet } from \"./alertSlice\"\r\n\r\nexport const getFields = createAsyncThunk(\r\n    'fields/get-all',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request('/api/fields/get-all', 'GET', null, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nexport const saveChanges = createAsyncThunk(\r\n    'fields/save',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState, fieldsState } = thunkAPI.getState()\r\n            const { addedFields, removedFields } = fieldsState\r\n            const response = await request('/api/fields/save', 'POST', { addedFields, removedFields }, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nconst initialState = {\r\n    fields: [],\r\n    addForm: {\r\n        name: '', type: 'number'\r\n    },\r\n    addedFields: [],\r\n    removedFields: [],\r\n    loading: false\r\n}\r\n\r\nconst fieldsSlice = createSlice({\r\n    name: 'fieldsSlice',\r\n    initialState,\r\n    reducers: {\r\n        addFormHandler: (state, {payload}) => ({ ...state, addForm: { ...state.addForm, [payload.field]: payload.value } }),\r\n        addField: state => ({\r\n            ...state, addedFields: state.addedFields.concat({ ...state.addForm }),\r\n            addForm: { name: '', type: 'number' }\r\n        }),\r\n        removeField: (state, {payload}) => ({ ...state, removedFields: state.removedFields.concat(payload) }),\r\n        cancelRemove: (state, {payload}) => ({ ...state, removedFields: state.removedFields.filter(item => item.toString() !== payload.toString()) }),\r\n        cancelAdd: (state, {payload}) => ({ ...state, addedFields: state.addedFields.filter((_, index) => index.toString() !== payload.toString()) })\r\n    },\r\n    extraReducers: {\r\n        [getFields.pending]: state => ({ ...state, loading: true }),\r\n        [getFields.fulfilled]: (state, {payload}) => ({ ...state, fields: payload, loading: false }),\r\n        [getFields.rejected]: state => ({ ...state, loading: false }),\r\n\r\n        [saveChanges.pending]: state => ({ ...state, loading: true }),\r\n        [saveChanges.fulfilled]: (state, {payload}) => ({ ...state, fields: payload, loading: false, addedFields: [], removedFields: [] }),\r\n        [saveChanges.rejected]: state => ({ ...state, loading: false })\r\n    }\r\n})\r\n\r\nexport const { addFormHandler, addField, removeField, cancelRemove, cancelAdd } = fieldsSlice.actions\r\n\r\nexport default fieldsSlice.reducer","import React, { useEffect } from 'react'\r\nimport { Button, Col, Container, Form, Placeholder, Row, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addField, addFormHandler, cancelAdd, cancelRemove, getFields, removeField, saveChanges } from '../../redux/fieldsSlice'\r\n\r\nconst FieldsPage = () => {\r\n    const { addForm, addedFields, fields, removedFields, loading } = useSelector(state => state.fieldsState)\r\n    const dispatch = useDispatch()\r\n\r\n    const changeHandler = event => {\r\n        dispatch(addFormHandler({ field: event.target.name, value: event.target.value }))\r\n    }\r\n\r\n    const addHandler = () => {\r\n        dispatch(addField())\r\n    }\r\n\r\n    const removeHandler = event => {\r\n        dispatch(removeField(event.target.getAttribute('data-id')))\r\n    }\r\n\r\n    const cancelRemoveHandler = event => {\r\n        dispatch(cancelRemove(event.target.getAttribute('data-id')))\r\n    }\r\n\r\n    const cancelAddHandler = event => {\r\n        dispatch(cancelAdd(event.target.getAttribute('data-id')))\r\n    }\r\n\r\n    const saveHandler = () => {\r\n        dispatch(saveChanges())\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getFields())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container className=\"py-4\">\r\n            <h3>Поля</h3>\r\n            { loading && <Row xs={1} md={3} className=\"g-3 mb-3\">\r\n                {\r\n                    new Array(9).fill(true).map((_, index) => (\r\n                        <Col key={`ph_${index}`}>\r\n                            <Placeholder as=\"p\" animation=\"glow\" className=\"m-0 p-0 rounded\">\r\n                                <Placeholder xs={12} className=\"rounded p-4\" />\r\n                            </Placeholder>\r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row> }\r\n            { loading && <Placeholder animation=\"glow\"><Placeholder.Button xs={12} md={2} /></Placeholder> }\r\n            { !loading && <Table className=\"mb-3\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\">Наименование поля</th>\r\n                        <th className=\"text-center\">Тип данных</th>\r\n                        <th className=\"text-center\">Действие</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        fields.map(({_id, name, type}) => {\r\n                            const removed = removedFields.some(item => item.toString() === _id.toString())\r\n                            return <tr key={_id}>\r\n                                <td className={ removed ? \"text-muted\" : \"\" }>{name}</td>\r\n                                <td className={ removed ? \"text-muted text-center\" : \"text-center\" }>\r\n                                    {\r\n                                        [\r\n                                            {key: 'number', value: 'Числовой'},\r\n                                            {key: 'text', value: 'Текстовый'}\r\n                                        ].filter(({key}) => key === type).map(item => (<span key={_id + item.key}>{item.value}</span>))\r\n                                    }\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                    <Button size=\"sm\" data-id={_id}\r\n                                        variant={removed ? \"success\" : \"danger\" }\r\n                                        onClick={removed ? cancelRemoveHandler : removeHandler}\r\n                                    >\r\n                                        { removed ? <>Восстановить</> : <>Удалить</> }\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                    {\r\n                        addedFields.map(({name, type}, index) => (\r\n                            <tr key={`key_${index}`}>\r\n                                <td>{name}</td>\r\n                                <td className=\"text-center\">\r\n                                    {\r\n                                        [\r\n                                            {key: 'number', value: 'Числовой'},\r\n                                            {key: 'text', value: 'Текстовый'}\r\n                                        ].filter(({key}) => key === type).map(item => (<span key={index + item.key}>{item.value}</span>))\r\n                                    }\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                    <Button variant=\"secondary\" size=\"sm\" data-id={index} onClick={cancelAddHandler}>Отменить</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>\r\n                            <Form.Control type=\"text\" placeholder=\"Наименование\" value={addForm.name} onChange={changeHandler} name=\"name\" />\r\n                        </td>\r\n                        <td>\r\n                            <Form.Select value={addForm.type} onChange={changeHandler} name=\"type\">\r\n                                <option value=\"number\">Числовой</option>\r\n                                <option value=\"text\">Текстовый</option>\r\n                            </Form.Select>\r\n                        </td>\r\n                        <td className=\"text-center\">\r\n                            <Button variant=\"primary\" size=\"sm\" onClick={addHandler}\r\n                                disabled={ addForm.name === '' }\r\n                            >Добавить поле</Button>\r\n                        </td>\r\n                    </tr>\r\n                </tfoot>\r\n            </Table> }\r\n            { !loading && <div>\r\n                <Button variant=\"primary\" onClick={saveHandler}>Сохранить</Button>\r\n            </div> }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FieldsPage","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport { request } from \"../API/http.api\"\r\nimport { alertSliceSet } from \"./alertSlice\"\r\n\r\nexport const getCategory = createAsyncThunk(\r\n    '/transfer/getCategory',\r\n    async (payload, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request(\r\n                '/api/categories/category-by-id',\r\n                'POST', payload ? { id: payload } : null, { Authorization: `Base ${authState.id}` }\r\n            )\r\n            return response\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n        \r\n    }\r\n)\r\n\r\nexport const getParentCategory = createAsyncThunk(\r\n    '/transfer/getParentCategory',\r\n    async (payload, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request(\r\n                '/api/categories/parent-category',\r\n                'POST', { id: payload }, { Authorization: `Base ${authState.id}` }\r\n            )\r\n            return response\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n        \r\n    }\r\n)\r\n\r\nexport const getCatalog = createAsyncThunk(\r\n    '/transfer/getCatalog',\r\n    async (payload, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request(\r\n                '/api/categories/catalog-by-id',\r\n                'POST', payload ? { id: payload } : null, { Authorization: `Base ${authState.id}` }\r\n            )\r\n            return response\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n        \r\n    }\r\n)\r\n\r\nexport const getParentCatalog = createAsyncThunk(\r\n    '/transfer/getParentCatalog',\r\n    async (payload, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request(\r\n                '/api/categories/parent-catalog',\r\n                'POST', { id: payload }, { Authorization: `Base ${authState.id}` }\r\n            )\r\n            return response\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nexport const transfer = createAsyncThunk(\r\n    '/transfer/update',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState, transferState } = thunkAPI.getState()\r\n            const data = { products: JSON.stringify(transferState.categoryChecked), categoryId: transferState.selectedCatalog }\r\n            const response = await request('/api/categories/transfer', 'POST', data, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nexport const unTransfer = createAsyncThunk(\r\n    '/transfer/update',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState, transferState } = thunkAPI.getState()\r\n            const data = { products: JSON.stringify(transferState.catalogChecked), categoryId: transferState.selectedCatalog }\r\n            const response = await request('/api/categories/transfer-cancel', 'POST', data, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nconst initialState = {\r\n    catalog: [],\r\n    category: [],\r\n    categoryFilter: [],\r\n    catalogChecked: [],\r\n    categoryChecked: [],\r\n    catalogLoading: false,\r\n    categoryLoading: false,\r\n    selectedCatalog: null,\r\n    selectedCategory: null,\r\n}\r\n\r\nconst transferSlice = createSlice({\r\n    name: 'transferSlice',\r\n    initialState,\r\n    reducers: {\r\n        catalogCheck: (state, {payload}) => {\r\n            const catalogChecked = state.catalogChecked.map(item => item)\r\n            const index = catalogChecked.findIndex(item => item === payload)\r\n            if ( index === -1 ) catalogChecked.push(payload)\r\n            else catalogChecked.splice(index, 1)\r\n            return ({ ...state, catalogChecked })\r\n        },\r\n        categoryCheck: (state, {payload}) => {\r\n            const categoryChecked = state.categoryChecked.map(item => item)\r\n            const index = categoryChecked.findIndex(item => item === payload)\r\n            if ( index === -1 ) categoryChecked.push(payload)\r\n            else categoryChecked.splice(index, 1)\r\n            return ({ ...state, categoryChecked })\r\n        },\r\n        reset: () => initialState,\r\n        selectCatalog: (state, {payload}) => ({ ...state, selectedCatalog: payload, catalogChecked: initialState.catalogChecked }),\r\n        selectCategory: (state, {payload}) => ({ ...state, selectedCategory: payload, categoryChecked: initialState.categoryChecked }),\r\n    },\r\n    extraReducers: {\r\n        [getCatalog.pending]: state => ({ ...state, catalogLoading: true }),\r\n        [getCatalog.fulfilled]: (state, {payload}) => ({\r\n            ...state, catalog: payload, catalogLoading: false,\r\n            categoryFilter: state.category.filter(({_id}) => payload.every(item => item._id.toString() !== _id.toString()))\r\n        }),\r\n        [getCatalog.rejected]: state => ({ ...state, catalogLoading: false }),\r\n\r\n        [getCategory.pending]: state => ({ ...state, categoryLoading: true }),\r\n        [getCategory.fulfilled]: (state, {payload}) => ({\r\n            ...state, category: payload, categoryLoading: false,\r\n            categoryFilter: payload.filter(({_id}) => state.catalog.every(item => item._id.toString() !== _id.toString()))\r\n        }),\r\n        [getCategory.rejected]: state => ({ ...state, categoryLoading: false }),\r\n\r\n        [getParentCatalog.pending]: state => ({ ...state, catalogLoading: true }),\r\n        [getParentCatalog.fulfilled]: (state, {payload}) => ({\r\n            ...state, catalog: payload, catalogLoading: false,\r\n            selectedCatalog: payload[0]?.parent,\r\n            categoryFilter: state.category.filter(({_id}) => payload.every(item => item._id.toString() !== _id.toString()))\r\n        }),\r\n        [getParentCatalog.rejected]: state => ({ ...state, catalogLoading: false }),\r\n        \r\n        [getParentCategory.pending]: state => ({ ...state, categoryLoading: true }),\r\n        [getParentCategory.fulfilled]: (state, {payload}) => ({\r\n            ...state, category: payload, categoryLoading: false,\r\n            selectedCategory: payload[0]?.parent,\r\n            categoryFilter: payload.filter(({_id}) => state.catalog.every(item => item._id.toString() !== _id.toString()))\r\n        }),\r\n        [getParentCategory.rejected]: state => ({ ...state, categoryLoading: false }),\r\n\r\n        [transfer.pending]: state => ({ ...state, catalogLoading: true }),\r\n        [transfer.fulfilled]: (state, {payload}) => ({\r\n            ...state, catalog: payload, catalogLoading: false, categoryChecked: [],\r\n            categoryFilter: state.category.filter(({_id}) => payload.every(item => item._id.toString() !== _id.toString()))\r\n        }),\r\n        [transfer.rejected]: state => ({ ...state, catalogLoading: false }),\r\n\r\n        [unTransfer.pending]: state => ({ ...state, catalogLoading: true }),\r\n        [unTransfer.fulfilled]: (state, {payload}) => ({\r\n            ...state, catalog: payload, catalogLoading: false, catalogChecked: [],\r\n            categoryFilter: state.category.filter(({_id}) => payload.every(item => item._id.toString() !== _id.toString()))\r\n        }),\r\n        [unTransfer.rejected]: state => ({ ...state, catalogLoading: false }),\r\n    }\r\n})\r\n\r\nexport const { catalogCheck, categoryCheck, reset, selectCatalog, selectCategory } = transferSlice.actions\r\n\r\nexport default transferSlice.reducer","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { transfer, unTransfer } from '../../redux/transferSlice'\r\n\r\nconst ButtonsPanel = () => {\r\n    const { catalogChecked, categoryChecked, catalogLoading, selectedCategory, selectedCatalog } = useSelector(state => state.transferState)\r\n    const dispatch = useDispatch()\r\n\r\n    const importHandler = () => {\r\n        dispatch(transfer())\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        dispatch(unTransfer())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"primary mb-2\"\r\n                disabled={catalogLoading || !selectedCategory || !selectedCatalog || categoryChecked.length === 0}\r\n                onClick={importHandler}\r\n            >&gt;&gt;</Button>\r\n            <Button\r\n                variant=\"success mt-2\"\r\n                disabled={catalogLoading || catalogChecked.length === 0}\r\n                onClick={cancelHandler}\r\n            >&lt;&lt;</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonsPanel","import React from 'react'\r\nimport { Placeholder } from 'react-bootstrap'\r\n\r\nconst Loader = () => (\r\n    <div>\r\n        <Placeholder as=\"p\" animation=\"grow\">\r\n            <Placeholder xs={12} className=\"rounded\" />\r\n        </Placeholder>\r\n        <Placeholder as=\"p\" animation=\"grow\">\r\n            <Placeholder xs={12} className=\"rounded\" />\r\n        </Placeholder>\r\n        <Placeholder as=\"p\" animation=\"grow\">\r\n            <Placeholder xs={12} className=\"rounded\" />\r\n        </Placeholder>\r\n    </div>\r\n)\r\n\r\nexport default Loader","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table } from 'react-bootstrap'\r\nimport { catalogCheck, getCatalog, getParentCatalog, selectCatalog } from '../../redux/transferSlice'\r\nimport Loader from './CategoryLoader'\r\n\r\nconst CatalogWindow = () => {\r\n    const { catalog, catalogChecked, catalogLoading, selectedCatalog } = useSelector(state => state.transferState)\r\n    const dispatch = useDispatch()\r\n\r\n    const upHandler = event => {\r\n        dispatch(getParentCatalog(event.target.dataset.catalog))\r\n    }\r\n\r\n    const goodHandler = event => {\r\n        dispatch(catalogCheck(event.target.dataset.id))\r\n    }\r\n\r\n    const catalogHandler = event => {\r\n        dispatch(selectCatalog(event.target.dataset.id))\r\n        dispatch(getCatalog(event.target.dataset.id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCatalog())\r\n    }, [dispatch])\r\n\r\n    if ( catalogLoading ) {\r\n        return <Loader />\r\n    }\r\n\r\n    if ( !selectedCatalog && catalog.length === 0 ) {\r\n        return <p className=\"text-center\">Нет доступных категорий</p>\r\n    }\r\n\r\n    return (\r\n        <Table>\r\n            <tbody>\r\n                { selectedCatalog &&\r\n                    <tr>\r\n                        <td style={{ width: '12px' }}></td>\r\n                        <td>\r\n                            <span onClick={upHandler} data-catalog={selectedCatalog} className=\"cursor-pointer\">..</span>\r\n                        </td>\r\n                    </tr>\r\n                }\r\n                {\r\n                    catalog.map(({_id, isGood, name}) => (\r\n                        <tr key={_id}>\r\n                            <td className=\"align-middle p-1\" style={{ width: '12px' }}>\r\n                                { !isGood && <span className=\"text-muted p-1 rounded\">+</span> }\r\n                            </td>\r\n                            <td className=\"p-1\">\r\n                                <span\r\n                                    className={`cursor-pointer ${catalogChecked.some(item => item === _id) ? \"text-success\" : \"text-dark\"}`}\r\n                                    data-id={_id}\r\n                                    onClick={ isGood ? goodHandler : catalogHandler }\r\n                                >{name}</span>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default CatalogWindow","import React, { useEffect } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { categoryCheck, getCategory, getParentCategory, selectCategory } from '../../redux/transferSlice'\r\nimport Loader from './CategoryLoader'\r\n\r\nconst CategoryWindow = () => {\r\n    const { categoryFilter, categoryChecked, categoryLoading, selectedCategory } = useSelector(state => state.transferState)\r\n    const dispatch = useDispatch()\r\n\r\n    const upHandler = event => {\r\n        dispatch(getParentCategory(event.target.dataset.category))\r\n    }\r\n    \r\n    const goodHandler = event => {\r\n        dispatch(categoryCheck(event.target.dataset.id))\r\n    }\r\n\r\n    const categoryHandler = event => {\r\n        dispatch(selectCategory(event.target.dataset.id))\r\n        dispatch(getCategory(event.target.dataset.id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCategory())\r\n    }, [dispatch])\r\n\r\n    if ( categoryLoading ) {\r\n        return <Loader />\r\n    }\r\n\r\n    if ( !selectedCategory && categoryFilter.length === 0 ) {\r\n        return <p className=\"text-center\">Нет доступных категорий</p>\r\n    }\r\n\r\n    return (\r\n        <Table>\r\n            <tbody>\r\n                { selectedCategory &&\r\n                    <tr>\r\n                        <td style={{ width: '12px' }}></td>\r\n                        <td>\r\n                            <span onClick={upHandler} data-category={selectedCategory} className=\"cursor-pointer\">..</span>\r\n                        </td>\r\n                    </tr>\r\n                }\r\n                {\r\n                    categoryFilter.map(({_id, isGood, name}) => (\r\n                        <tr key={_id}>\r\n                            <td className=\"align-middle p-1\" style={{ width: '12px' }}>\r\n                                { !isGood && <span className=\"text-muted p-1 rounded\">+</span> }\r\n                            </td>\r\n                            <td className=\"p-1\">\r\n                                <span\r\n                                    className={`cursor-pointer ${categoryChecked.some(item => item === _id) ? \"text-primary\" : \"text-dark\"}`}\r\n                                    data-id={_id}\r\n                                    onClick={ isGood ? goodHandler : categoryHandler }\r\n                                >{name}</span>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default CategoryWindow","import React, { useEffect } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport { reset } from '../../redux/transferSlice'\r\nimport ButtonsPanel from './ButtonsPanel'\r\nimport CatalogWindow from './CatalogWindow'\r\nimport CategoryWindow from './CategoryWindow'\r\n\r\nconst TransferPage = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => dispatch(reset())\r\n    }, [])\r\n\r\n    return (\r\n        <Container className=\"py-4\">\r\n            <h3>Трансфер товаров</h3>\r\n            <Row className=\"border px-2 py-4 bg-light rounded align-items-stretch\">\r\n                <Col xs={12} md={5}>\r\n                    <Container style={{ height: '70vh' }} className=\"bg-white rounded border overflow-scroll py-2\">\r\n                        <CategoryWindow />\r\n                    </Container>\r\n                </Col>\r\n                <Col xs={12} md={2} className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <ButtonsPanel />\r\n                </Col>\r\n                <Col xs={12} md={5}>\r\n                    <Container className=\"bg-white rounded border py-2 h-100 pe-2 overflow-scroll\" style={{ overflowY: 'scroll', maxHeight: '70vh' }}>\r\n                        <CatalogWindow />\r\n                    </Container>\r\n                </Col>\r\n            </Row>         \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TransferPage","import { BrowserRouter } from 'react-router-dom'\nimport { AlertComponent } from './components/AlertComponent';\nimport { HeaderComponent } from './components/HeaderComponent';\nimport { BrowserRoutes } from './Routes'\n\nfunction App() {\n  const routes = BrowserRoutes()\n\n  return (\n      <BrowserRouter>\n        <AlertComponent />\n        <HeaderComponent />\n        { routes }\n      </BrowserRouter>\n  );\n}\n\nexport default App;","import React from \"react\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginPage } from \"./pages/LoginPage\"\r\nimport { useSelector } from 'react-redux'\r\nimport { UsersPage } from \"./pages/users/UsersPage\"\r\nimport { CategoriesPage } from \"./pages/categories/CategoriesPage\"\r\nimport { GoodsPage } from \"./pages/goods/GoodsPage\"\r\nimport { UserPage } from \"./pages/users/UserPage\"\r\nimport CategoryPage from \"./pages/categories/CategoryPage\"\r\nimport MainPage from \"./pages/mainPage/MainPage\"\r\nimport FieldsPage from \"./pages/fields/FieldsPage\"\r\nimport TransferPage from \"./pages/transfer/TransferPage\"\r\n\r\nexport const BrowserRoutes = () => {\r\n    const {id} = useSelector(state => state.authState)\r\n\r\n    if (id) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/admin/main\">\r\n                    <MainPage />\r\n                </Route>\r\n\r\n                <Route path=\"/admin/users\" exact>\r\n                    <UsersPage />\r\n                </Route>\r\n                <Route path=\"/admin/users/user\" exact>\r\n                    <UserPage />\r\n                </Route>\r\n                <Route path=\"/admin/users/user/:id\">\r\n                    <UserPage />\r\n                </Route>\r\n\r\n                <Route path=\"/admin/fields\">\r\n                    <FieldsPage />\r\n                </Route>\r\n\r\n                <Route path=\"/admin/categories\" exact>\r\n                    <CategoriesPage />\r\n                </Route>\r\n                <Route path=\"/admin/categories/category/:obj\">\r\n                    <CategoryPage />\r\n                </Route>\r\n\r\n                <Route path=\"/admin/goods\">\r\n                    <GoodsPage />\r\n                </Route>\r\n\r\n                <Route path=\"/admin/transfer\">\r\n                    <TransferPage />\r\n                </Route>\r\n\r\n                <Redirect to=\"/admin/main\" />\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/admin/login\">\r\n                <LoginPage />\r\n            </Route>\r\n            <Redirect to=\"/admin/login\" />\r\n        </Switch>\r\n    )\r\n}","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport alertSlice from \"./alertSlice\"\r\nimport authSlice from \"./authSlice\"\r\nimport categorySlice from \"./categorySlice\"\r\nimport fieldsSlice from \"./fieldsSlice\"\r\nimport goodsSlice from \"./goodsSlice\"\r\nimport transferSlice from \"./transferSlice\"\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        authState: authSlice,\r\n        alertState: alertSlice,\r\n        categoriesState: categorySlice,\r\n        fieldsState: fieldsSlice,\r\n        goodsState: goodsSlice,\r\n        transferState: transferSlice\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}