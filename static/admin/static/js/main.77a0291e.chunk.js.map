{"version":3,"sources":["redux/alertSlice.js","components/AlertComponent.js","redux/authSlice.js","hooks/auth.hook.js","components/HeaderComponent.js","hooks/alert.hook.js","redux/alertTypes.js","hooks/http.hook.js","pages/LoginPage.js","components/Loader.js","pages/users/UsersPage.js","API/http.api.js","redux/categorySlice.js","pages/categories/LoadingList.js","pages/categories/ListTree.js","pages/categories/CategoriesTree.js","pages/categories/CategoryPanel.js","pages/categories/CategoriesPage.js","redux/types.js","redux/goodsSlice.js","pages/goods/ProductImage.js","pages/goods/Images.js","pages/goods/GoodsPanel.js","pages/goods/GoodsTree.js","pages/goods/GoodsPage.js","pages/users/UserPage.js","pages/categories/CategoryPage.js","pages/mainPage/MainPageCard.js","pages/mainPage/MainPage.js","redux/fieldsSlice.js","pages/fields/FieldsPage.js","App.js","Routes.js","redux/store.js","index.js"],"names":["alertSlice","createSlice","name","initialState","text","show","vatiant","reducers","alertSliceHide","state","alertSliceSet","payload","variant","actions","AlertComponent","useSelector","alertState","dispatch","useDispatch","Container","fluid","className","style","zIndex","Alert","onClose","dismissible","authSlice","id","authSliceLogin","_id","authSliceLogout","useAuth","itemName","login","useCallback","role","localStorage","setItem","JSON","stringify","logout","removeItem","useEffect","parse","getItem","HeaderComponent","authState","Navbar","bg","expand","to","Button","onClick","useAlert","successAlert","errorAlert","useHttp","useState","error","setError","loading","setLoading","progress","setProgress","request","url","a","method","body","headers","fetch","response","data","Error","result","ok","message","sendFormData","files","formData","FormData","Object","entries","key","value","append","i","fileKey","fileName","xhr","XMLHttpRequest","open","setRequestHeader","Promise","resolve","reject","send","upload","onprogress","event","parseInt","loaded","total","onreadystatechange","readyState","status","getFile","blob","clearError","LoginPage","pass","form","setForm","submitHandler","preventDefault","Form","onSubmit","Group","Label","Control","type","onChange","target","disabled","Spinner","animation","size","Loader","background","UsersPage","users","setUsers","getUsers","removeHandler","getAttribute","length","Table","striped","bordered","hover","map","avatar","alt","src","width","Row","Col","sm","md","console","log","fetchCategories","createAsyncThunk","_","thunkAPI","getState","Authorization","updateCategory","categoriesState","selectedCategory","description","imgSrc","then","res","cover","moySkladSync","categories","list","photo","findInTree","obj","candidate","categorySlice","categoryClickHandler","resetCategoriesState","setPhoto","URL","createObjectURL","extraReducers","pending","fulfilled","rejected","setCategories","LoadingList","Placeholder","as","xs","ListTree","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","onNodeSelect","nodeIds","sx","height","flexGrow","maxWidth","overflowY","renderTree","nodes","TreeItem","nodeId","label","Array","isArray","node","CategoriesTree","CategoryPanel","Tabs","defaultActiveKey","Tab","eventKey","title","readOnly","placeholder","rows","Image","CloseButton","padding","margin","onInput","accept","fontSize","CategoriesPage","OverlayTrigger","placement","delay","hide","overlay","Tooltip","CARD_PRIMARY","CARD_SECONDARY","CARD_SUCCESS","getGoods","updateGood","goodsState","selectedProduct","deleted","deletedPhotos","photos","addedPhotos","file","File","img","push","rmPhoto","setTimeout","rcPhoto","toString","activeTab","goods","loadedPhotos","goodsSlice","addPhotos","added","concat","moveImg","hoverIndex","moveIndex","item","splice","productClickHandler","images","isGood","tabChange","resetGoods","meta","index","arg","idx","classList","filter","setPhotoState","ProductImage","ref","useRef","useDrop","current","drop","useDrag","drag","Card","Header","Body","dataset","xmlns","fill","viewBox","d","Images","minHeight","sources","from","multiple","GoodsPanel","tabHandler","activeKey","onSelect","DndProvider","backend","HTML5Backend","GoodsTree","GoodsPage","UserPage","view","edit","rights","setRights","isLoading","setIsLoading","params","useParams","getUserById","user","checkboxHandler","checked","createHandler","updateHandler","span","offset","ListGroup","Item","Check","inline","CategoryPage","Img","Text","MainPageCard","header","link","border","Footer","MainPage","getFields","saveChanges","fieldsState","addedFields","removedFields","fieldsSlice","fields","addForm","addFormHandler","field","addField","removeField","cancelRemove","cancelAdd","FieldsPage","changeHandler","cancelRemoveHandler","cancelAddHandler","removed","some","Select","App","routes","path","exact","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.77a0291e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const alertSlice = createSlice({\r\n    name: 'alertSlice',\r\n    initialState: {\r\n        text: '',\r\n        show: false,\r\n        vatiant: 'success'\r\n    },\r\n    reducers: {\r\n        alertSliceHide: state => ({...state, text: '', show: false}),\r\n        alertSliceSet: (state, {payload}) => ({...state, text: payload.text, show: true, variant: payload.variant})\r\n    }\r\n})\r\n\r\nexport const { alertSliceHide, alertSliceSet } = alertSlice.actions\r\n\r\nexport default alertSlice.reducer","import React from \"react\"\r\nimport { Alert, Container } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { alertSliceHide } from \"../redux/alertSlice\"\r\n\r\nexport const AlertComponent = () => {\r\n    const { show, text, variant }  = useSelector(state => state.alertState)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Container fluid className={`position-fixed top-0 left-0 right-0 p-1 m-0`} style={{ zIndex: 1080 }}>\r\n            <Alert show={show} variant={variant} onClose={() => dispatch(alertSliceHide())} dismissible>\r\n                {text}\r\n            </Alert>\r\n        </Container>\r\n    )\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n    name: 'authSlice',\r\n    initialState: {\r\n        id: null,\r\n        name: ''\r\n    },\r\n    reducers: {\r\n        authSliceLogin: (state, {payload}) => ({...state, id: payload._id, name: payload.name}),\r\n        authSliceLogout: state => ({...state, id: null})\r\n    }\r\n})\r\n\r\nexport const { authSliceLogin, authSliceLogout } = authSlice.actions\r\n\r\nexport default authSlice.reducer","import { useCallback, useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { authSliceLogin, authSliceLogout } from \"../redux/authSlice\"\r\n\r\nexport const useAuth = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const itemName = 'drobot-shop-admin'\r\n\r\n    const login = useCallback(({_id, name, role}) => {\r\n        dispatch(authSliceLogin({_id, name, role}))\r\n        localStorage.setItem(itemName,  JSON.stringify({ _id, name, role }))\r\n    }, [dispatch])\r\n\r\n    const logout = useCallback(() => {\r\n        dispatch(authSliceLogout())\r\n        localStorage.removeItem(itemName)\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const { _id, name, role } = JSON.parse(localStorage.getItem(itemName))\r\n            if ( _id ) {\r\n                login({_id, name, role})\r\n            }\r\n        }\r\n        catch {}\r\n    }, [login])\r\n\r\n    return { login, logout }\r\n}","import React from \"react\"\r\nimport { Button, Navbar } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { useAuth } from \"../hooks/auth.hook\"\r\n\r\nexport const HeaderComponent = () => {\r\n    const { id, name } = useSelector(state => state.authState)\r\n    const { logout } = useAuth()\r\n    \r\n    if ( !id ) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\" className=\"px-1\">\r\n            <span className=\"text-secondary me-3\">{name}</span>\r\n            <NavLink to=\"/admin/main\" className=\"mx-3\">Главная</NavLink>\r\n            <Button variant=\"link\" className=\"ms-auto\" onClick={logout}>Выход</Button>\r\n        </Navbar>\r\n    )\r\n}","import { useCallback } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { alertSliceSet } from \"../redux/alertSlice\"\r\nimport { ALERT_VARIANT_ERROR, ALERT_VARIANT_SUCCESS } from \"../redux/alertTypes\"\r\n\r\nexport const useAlert = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const successAlert = useCallback(text => {\r\n        dispatch(alertSliceSet({ text, variant: ALERT_VARIANT_SUCCESS }))\r\n    }, [dispatch])\r\n\r\n    const errorAlert = useCallback(text => {\r\n        dispatch(alertSliceSet({ text, variant: ALERT_VARIANT_ERROR }))\r\n    }, [dispatch])\r\n\r\n    return { successAlert, errorAlert }\r\n}","export const ALERT_VARIANT_SUCCESS = 'success'\r\nexport const ALERT_VARIANT_ERROR = 'danger'","import { useCallback, useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useAlert } from \"./alert.hook\"\r\n\r\nexport const useHttp = () => {\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [progress, setProgress] = useState(0)\r\n    const { errorAlert } = useAlert()\r\n    const { id } = useSelector(state => state.authState)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        headers['Content-Type'] = 'application/json'\r\n        headers['Authorization'] = `Base ${id}`\r\n        if ( body ) body = JSON.stringify(body)\r\n        try {\r\n            const response = await fetch(url, { method, body, headers })\r\n            const data = await response.text()\r\n\r\n            try {\r\n                JSON.parse(data)\r\n            }\r\n            catch {\r\n                throw new Error('INVALID SERVER RESPONSE')\r\n            }\r\n\r\n            const result = JSON.parse(data)\r\n\r\n            if ( !response.ok ) {\r\n                throw new Error(result.message || 'SERVER ERROR')\r\n            }\r\n\r\n            setLoading(false)\r\n            return result\r\n        }\r\n        catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [id])\r\n\r\n    const sendFormData = useCallback( async (url, data, files, headers = {}) => {\r\n        const formData = new FormData()\r\n        for ( let [key, value] of Object.entries(data)) {\r\n            formData.append(key, value)\r\n        }\r\n\r\n        for (let i in files) {\r\n            const [fileKey, fileName] = Object.entries(files[i])[0]\r\n            formData.append(fileKey, fileName)\r\n        }\r\n        \r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', url)\r\n\r\n        headers['Authorization'] = `Base ${id}`\r\n        for ( let [key, value] of Object.entries(headers) ) {\r\n            xhr.setRequestHeader(key, value)\r\n        }\r\n\r\n        try {\r\n            return await new Promise((resolve, reject) => {\r\n                setProgress(0)\r\n                setLoading(true)\r\n                xhr.send(formData)\r\n                xhr.upload.onprogress = event =>  {\r\n                    setProgress(parseInt(100 * event.loaded / event.total))\r\n                }\r\n                xhr.onreadystatechange = () => {\r\n                    if (parseInt(xhr.readyState) === 4) {\r\n                        try {\r\n                            JSON.parse(xhr.response)\r\n                        }\r\n                        catch {\r\n                            reject({message: 'INVALID SERVER RESPONSE'})\r\n                        }\r\n                        const response = JSON.parse(xhr.response)\r\n                        if ( parseInt(xhr.status) < 300 ) {\r\n                            setProgress(0)\r\n                            setLoading(false)\r\n                            resolve(response)\r\n                        }\r\n                        reject(response)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        catch (e) {\r\n            setProgress(0)\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [id])\r\n\r\n    const getFile = useCallback(async (url) => {\r\n        setLoading(true)\r\n        const headers = {}\r\n        headers['Authorization'] = `Base ${id}`\r\n        try {\r\n            const response = await fetch(url, { method: 'GET', body: null, headers })\r\n            const result = await response.blob()\r\n\r\n            if ( !response.ok ) {\r\n                throw new Error(result.message || 'SERVER ERROR')\r\n            }\r\n\r\n            setLoading(false)\r\n            return result\r\n        }\r\n        catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [id])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    useEffect(() => {\r\n        if ( error ) {\r\n            errorAlert(error)\r\n            clearError()\r\n        }\r\n    }, [error, clearError, errorAlert])\r\n\r\n    return { request, sendFormData, getFile, loading, progress, error, clearError } \r\n}","import React, { useState } from \"react\";\r\nimport { Container, Form, Button, Spinner } from 'react-bootstrap'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport { useAuth } from '../hooks/auth.hook'\r\n\r\nexport const LoginPage = () => {\r\n    const [form, setForm] = useState({login: '', pass: ''})\r\n    const { request, loading } = useHttp()\r\n    const { login } = useAuth()\r\n\r\n    const submitHandler = async event => {\r\n        event.preventDefault()\r\n        try {\r\n            const {_id, name, role} = await request('/api/auth/login', 'POST', form)\r\n            login({ _id, name, role })\r\n        }\r\n        catch {}\r\n    }\r\n\r\n    return (\r\n        <Container className=\"min-vh-100 d-flex\">\r\n            <Form className=\"m-auto col-12 col-md-3\" onSubmit={submitHandler}>\r\n                <Form.Group className=\"mb-2\">\r\n                    <Form.Label>Логин</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"login\"\r\n                        value={form.login}\r\n                        onChange={event => setForm(state => ({...state, [event.target.name]: event.target.value}))}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Пароль</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"pass\"\r\n                        value={form.pass}\r\n                        onChange={event => setForm(state => ({...state, [event.target.name]: event.target.value}))}\r\n                    />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    { loading ? <Spinner animation=\"border\" variant=\"primary\" size=\"sm\" /> : 'OK' }\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport { Container, Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Container fluid className=\"position-fixed top-0 left-0 bottom-0 m-0 d-flex\" style={{ zIndex: 1060, background: 'rgba(255, 255, 255, 0.8)' }}>\r\n            <Spinner animation=\"border\" variant=\"secondary\" className=\"m-auto\" />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Row, Table } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Loader from '../../components/Loader'\r\nimport { useAlert } from '../../hooks/alert.hook'\r\nimport { useHttp } from '../../hooks/http.hook'\r\n\r\nexport const UsersPage = () => {\r\n    const [users, setUsers] = useState()\r\n    const { request, loading } = useHttp()\r\n    const { successAlert } = useAlert()\r\n\r\n    const getUsers = useCallback(async () => {\r\n        try {\r\n            const response = await request('/api/users/get-all')\r\n            setUsers(response)\r\n        }\r\n        catch {}\r\n    }, [request])\r\n\r\n    const removeHandler = async event => {\r\n        const id = event.target.getAttribute('data-id')\r\n        try {\r\n            const { message } = await request('/api/users/remove', 'POST', { id })\r\n            successAlert(message)\r\n            getUsers()\r\n        }\r\n        catch {}\r\n    }\r\n\r\n    useEffect(getUsers, [getUsers])\r\n\r\n    return (\r\n        <Container className=\"py-4\">\r\n            { loading && <Loader /> }\r\n            <h3>Пользователи</h3>\r\n            { !users?.length && <p>Список пользователей пуст</p> }\r\n            { users?.length > 0 && <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Имя</th>\r\n                        <th>Логин</th>\r\n                        <th>Изменить</th>\r\n                        <th>Удалить</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        users.map(({_id, avatar, name, login}) => (\r\n                            <tr key={_id}>\r\n                                <td>{\r\n                                    avatar && avatar !== '' && <img alt=\"avatar\" src={avatar} width=\"40\" />\r\n                                }</td>\r\n                                <td>{name}</td>\r\n                                <td>{login}</td>\r\n                                <td>\r\n                                    <NavLink className=\"btn btn-primary\" to={`/admin/users/user/${_id}`}>Изменить</NavLink>\r\n                                </td>\r\n                                <td>\r\n                                    <Button\r\n                                        variant=\"link\"\r\n                                        className=\"text-danger\"\r\n                                        onClick={removeHandler}\r\n                                        data-id={_id}\r\n                                    >Удалить</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table> }\r\n            <Row className=\"mt-3\">\r\n                <Col sm={12} md={4}>\r\n                    <NavLink to=\"/admin/users/user\" className=\"btn btn-primary\">Добавить пользователя</NavLink>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","export const request = async (url, method = 'GET', body = null, headers = {}) => {\r\n    headers['Content-Type'] = 'application/json'\r\n    if ( body ) body = JSON.stringify(body)\r\n    try {\r\n        const response = await fetch(url, { method, body, headers })\r\n        const data = await response.text()\r\n\r\n        try {\r\n            JSON.parse(data)\r\n        }\r\n        catch {\r\n            throw new Error('INVALID SERVER RESPONSE')\r\n        }\r\n\r\n        const result = JSON.parse(data)\r\n\r\n        if ( !response.ok ) {\r\n            throw new Error(result.message || 'SERVER ERROR')\r\n        }\r\n        return result\r\n    }\r\n    catch (e) {\r\n        throw e\r\n    }\r\n}\r\n\r\nexport const sendFormData = async (url, data, files, headers = {}) => {\r\n    const formData = new FormData()\r\n    for ( let [key, value] of Object.entries(data)) {\r\n        formData.append(key, value)\r\n    }\r\n    \r\n    for (let i in files) {\r\n        const [fileKey, fileName] = Object.entries(files[i])[0]\r\n        formData.append(fileKey, fileName)\r\n    }\r\n        \r\n    const xhr = new XMLHttpRequest()\r\n    xhr.open('POST', url)\r\n\r\n    for ( let [key, value] of Object.entries(headers) ) {\r\n        xhr.setRequestHeader(key, value)\r\n    }\r\n\r\n    try {\r\n        return await new Promise((resolve, reject) => {\r\n            xhr.send(formData)\r\n            xhr.onreadystatechange = () => {\r\n                if (parseInt(xhr.readyState) === 4) {\r\n                    try {\r\n                        JSON.parse(xhr.response)\r\n                    }\r\n                    catch {\r\n                        reject({message: 'INVALID SERVER RESPONSE'})\r\n                    }\r\n                    const response = JSON.parse(xhr.response)\r\n                    if ( parseInt(xhr.status) < 300 ) {\r\n                        resolve(response)\r\n                    }\r\n                    reject(response)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n        throw e\r\n    }\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { request, sendFormData } from '../API/http.api'\r\nimport { alertSliceSet } from './alertSlice'\r\n\r\nexport const fetchCategories = createAsyncThunk(\r\n    'categories/get-all',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request('/api/categories/get-all', 'GET', null, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw (e)\r\n        }\r\n    }\r\n)\r\n\r\nexport const updateCategory = createAsyncThunk(\r\n    'categories/update-category',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState, categoriesState } = thunkAPI.getState()\r\n            const data = {\r\n                id: categoriesState.selectedCategory._id,\r\n                description: categoriesState.form.description\r\n            }\r\n            const cover = categoriesState.form.imgSrc && await fetch(categoriesState.form.imgSrc).then(res => res.blob())\r\n            const response = await sendFormData('/api/categories/update', data, [{ cover }], { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw (e)\r\n        }\r\n    }\r\n)\r\n\r\nexport const moySkladSync = createAsyncThunk(\r\n    'categories/sync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request('/api/categories/moy-sklad-sync', 'POST', null, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nconst initialState = {\r\n    categories: { _id: '0' },\r\n    form: { name: '', description: '', imgSrc: null },\r\n    list: [],\r\n    loading: false,\r\n    photo: null,\r\n    selectedCategory: null\r\n}\r\n\r\nconst findInTree = (obj, id) => {\r\n    if ( obj._id === id ) return obj\r\n    for ( let i in obj.entries ) {\r\n        const candidate = findInTree(obj.entries[i], id)\r\n        if ( candidate ) return candidate\r\n    }\r\n    return null\r\n}\r\n\r\nconst categorySlice = createSlice({\r\n    name: 'categorySlice',\r\n    initialState,\r\n    reducers: {\r\n        categoryClickHandler: (state, {payload}) => {\r\n            const selectedCategory = findInTree(state.categories, payload)\r\n            const { name, description, imgSrc } = selectedCategory ?? {}\r\n            return { ...state, selectedCategory, form: { name, description: description ?? '', imgSrc } }\r\n        },\r\n        resetCategoriesState: () => initialState,\r\n        setForm: (state, {payload}) => ({ ...state, form: { ...state.form, [payload.key]: payload.value } }),\r\n        setPhoto: (state, {payload}) => ({ ...state, form: { ...state.form, imgSrc: payload ? URL.createObjectURL(payload) : null } })\r\n    },\r\n    extraReducers: {\r\n        [fetchCategories.pending]: state => ({ ...state, loading: true }),\r\n        [fetchCategories.fulfilled]: (state, {payload}) => ({ ...state, loading: false, categories: { ...state.categories, entries: payload } }),\r\n        [fetchCategories.rejected]: state => ({ ...state, loading: false }),\r\n\r\n        [updateCategory.pending]: state => ({ ...state, loading: true }),\r\n        [updateCategory.fulfilled]: (state, {payload}) => ({ ...state, loading: false, categories: { ...state.categories, entries: payload } }),\r\n        [updateCategory.rejected]: state => ({ ...state, loading: false, categories: { _id: '0' } }),\r\n\r\n        [moySkladSync.pending]: state => ({ ...state, loading: true }),\r\n        [moySkladSync.fulfilled]: (state, {payload}) => ({ ...state, loading: false, categories: { ...state.categories, entries: payload } }),\r\n        [moySkladSync.rejected]: state => ({ ...state, loading: false })\r\n    }\r\n})\r\n\r\nexport const { categoryClickHandler, resetCategoriesState, setCategories, setForm, setPhoto } = categorySlice.actions\r\n\r\nexport default categorySlice.reducer","import React from 'react'\r\nimport { Placeholder } from 'react-bootstrap'\r\n\r\nconst LoadingList = () => (\r\n    <ul className=\"w-100\">\r\n        <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n            <Placeholder xs={12} className=\"rounded h-100\" />\r\n        </Placeholder>\r\n        <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n            <Placeholder xs={12} className=\"rounded h-100\" />\r\n        </Placeholder>\r\n        <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n            <Placeholder xs={12} className=\"rounded h-100\" />\r\n            <ul className=\"w-100\">\r\n                <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n                    <Placeholder xs={12} className=\"rounded h-100\" />\r\n                </Placeholder>\r\n                <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n                    <Placeholder xs={12} className=\"rounded h-100\" />\r\n                </Placeholder>\r\n            </ul>\r\n        </Placeholder>\r\n        <Placeholder as=\"li\" animation=\"glow\" xs={12}>\r\n            <Placeholder xs={12} className=\"rounded h-100\" />\r\n        </Placeholder>\r\n    </ul>\r\n)\r\n\r\nexport default LoadingList","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { categoryClickHandler } from '../../redux/categorySlice'\r\nimport TreeView from '@mui/lab/TreeView'\r\nimport TreeItem from '@mui/lab/TreeItem'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\r\n\r\nconst ListTree = () => {\r\n    const { categories } = useSelector(state => state.categoriesState)\r\n    const dispatch = useDispatch()\r\n\r\n    const selectHandler = (_, nodeIds) => {\r\n        dispatch(categoryClickHandler(nodeIds))\r\n    }\r\n\r\n    const renderTree = nodes => (\r\n        <TreeItem key={nodes._id} nodeId={nodes._id} label={nodes.name}>\r\n            {\r\n                Array.isArray(nodes.entries)\r\n                    ? nodes.entries.map(node => renderTree(node))\r\n                    : null\r\n            }\r\n        </TreeItem>\r\n    )\r\n\r\n    return (\r\n        <TreeView\r\n            aria-label=\"rich object\"\r\n            defaultCollapseIcon={ <ExpandMoreIcon /> }\r\n            defaultExpanded={ ['0'] }\r\n            defaultExpandIcon={ <ChevronRightIcon /> }\r\n            onNodeSelect={selectHandler}\r\n            sx={{ height: '100%', flexGrow: 1, maxWidth: '100%', overflowY: 'auto' }}\r\n        >\r\n            { renderTree(categories) }\r\n        </TreeView>\r\n    )\r\n}\r\n\r\nexport default ListTree","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LoadingList from './LoadingList'\r\nimport { fetchCategories } from '../../redux/categorySlice'\r\nimport ListTree from './ListTree'\r\n\r\nconst CategoriesTree = () => {\r\n    const { loading } = useSelector(state => state.categoriesState)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCategories())\r\n    }, [dispatch])\r\n\r\n    return loading ? <LoadingList/> : <ListTree />\r\n}\r\n\r\nexport default CategoriesTree","import React from 'react'\r\nimport { Button, CloseButton, Col, Form, Image, Placeholder, Row, Tab, Tabs } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setForm, setPhoto, updateCategory } from '../../redux/categorySlice'\r\nimport AddAPhotoOutlinedIcon from '@mui/icons-material/AddAPhotoOutlined'\r\n\r\nconst CategoryPanel = () => {\r\n    const { loading, selectedCategory, form } = useSelector(state => state.categoriesState)\r\n    const dispatch = useDispatch()\r\n\r\n    const formHandler = event => {\r\n        dispatch(setForm({ key: event.target.name, value: event.target.value }))\r\n    }\r\n\r\n    const fileHandler = event => {\r\n        dispatch(setPhoto(event.target.files[0]))\r\n    }\r\n\r\n    const removePhoto = () => {\r\n        dispatch(setPhoto())\r\n    }\r\n\r\n    const updateHandler = () => {\r\n        dispatch(updateCategory())\r\n    }\r\n\r\n    return loading ? (\r\n        <>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded h-100 mx-auto\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12}>\r\n                <Placeholder.Button xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12}>\r\n                <Placeholder.Button xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12} className=\"w-100 mt-auto\">\r\n                <Placeholder.Button variant=\"warning\" xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n        </>\r\n    ) :\r\n    (\r\n        <div className=\"d-flex flex-column h-100\">\r\n            <p className=\"text-center mb-3\">{selectedCategory?.name ?? 'Раздел не выбран'}</p>\r\n            { selectedCategory && \r\n                <>\r\n                    <Tabs defaultActiveKey=\"wrap\">\r\n                        <Tab eventKey=\"wrap\" title=\"Обложка\">\r\n                            <Row className=\"border border-top-0 rounded-bottom p-3 gx-2 m-0 align-items-stretch\">\r\n                                <Col sm={12} md={8}>\r\n                                    <Form>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Название</Form.Label>\r\n                                            <Form.Control type=\"text\" readOnly placeholder={form.name} />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Описание</Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"textarea\"\r\n                                                rows={3}\r\n                                                value={form.description}\r\n                                                name=\"description\"\r\n                                                onChange={formHandler}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col sm={12} md={4} className=\"d-flex\">\r\n                                    { form.imgSrc\r\n                                        ? <div className=\"position-relative\">\r\n                                            <Image src={form.imgSrc} fluid />\r\n                                            <CloseButton className=\"position-absolute top-0 end-0 bg-light m-1\" onClick={removePhoto} />\r\n                                        </div>\r\n                                        : <label className=\"m-auto w-100 d-flex\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                style={{ width: 0, height: 0, padding: 0, margin: 0 }}\r\n                                                onInput={fileHandler}\r\n                                                accept=\"image/*\"\r\n                                            />\r\n                                            <AddAPhotoOutlinedIcon className=\"m-auto text-secondary\" sx={{ fontSize: 80 }} />\r\n                                        </label>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab>\r\n                        <Tab eventKey=\"fields\" title=\"Поля\"></Tab>\r\n                    </Tabs>\r\n                    <div className=\"mt-auto ms-auto\">\r\n                        <Button variant=\"primary\" onClick={updateHandler}>Сохранить</Button>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryPanel","import React, { useEffect } from 'react'\r\nimport { Button, Col, Container, OverlayTrigger, Row, Tooltip } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { moySkladSync, resetCategoriesState } from '../../redux/categorySlice'\r\nimport CategoriesTree from './CategoriesTree'\r\nimport CategoryPanel from './CategoryPanel'\r\n\r\nexport const CategoriesPage = () => {\r\n    const { loading } = useSelector(state => state.categoriesState)\r\n    const dispatch = useDispatch()\r\n\r\n    const syncHandler = () => {\r\n        dispatch(moySkladSync())\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => dispatch(resetCategoriesState())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container className=\"py-4\">\r\n            <Row className=\"mb-3\">\r\n                <Col>\r\n                    <span className=\"fs-3\">Разделы и категории</span>\r\n                </Col>\r\n                <Col className=\"d-flex justify-content-end\">\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{ show: 200, hide: 200 }}\r\n                        overlay={\r\n                            <Tooltip>\r\n                                Получение актуальной информации из ПТК \"Мой склад\".\r\n                                Синхронизируются архитектура и названия категорий.\r\n                            </Tooltip>\r\n                        }\r\n                    >\r\n                        <Button variant=\"success\" onClick={syncHandler} disabled={loading}>Синхронизировать с \"Мой склад\"</Button>\r\n                    </OverlayTrigger>\r\n                    \r\n                </Col>\r\n            </Row>\r\n            <Row className=\"border px-2 py-4 bg-light rounded align-items-stretch\">\r\n                <Col xs={12} md={5}>\r\n                    <Container style={{ height: '70vh' }} className=\"bg-white rounded border overflow-scroll py-2\">\r\n                        <CategoriesTree />\r\n                    </Container>\r\n                </Col>\r\n                <Col xs={12} md={7}>\r\n                    <Container className=\"bg-white rounded border py-2 h-100 pe-2\" style={{ overflowY: 'scroll' }}>\r\n                        <CategoryPanel />\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","export const CARD_PRIMARY = 'primary'\r\nexport const CARD_SECONDARY = 'secondary'\r\nexport const CARD_SUCCESS = 'success'","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport { request, sendFormData } from \"../API/http.api\"\r\nimport { alertSliceSet } from \"./alertSlice\"\r\nimport { CARD_PRIMARY, CARD_SECONDARY, CARD_SUCCESS } from './types'\r\n\r\nexport const getGoods = createAsyncThunk(\r\n    'goods/get-all',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request('/api/goods/get-all', 'GET', null, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nexport const updateGood = createAsyncThunk(\r\n    'goods/update-good',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState, goodsState } = thunkAPI.getState()\r\n            const data = {\r\n                id: goodsState.selectedProduct._id,\r\n                deleted: JSON.stringify(goodsState.deletedPhotos),\r\n                description: goodsState.form.description,\r\n                photos: JSON.stringify(goodsState.photos)\r\n            }\r\n            const files = []\r\n            for (let i in goodsState.addedPhotos) {\r\n                files.push({\r\n                    img: await fetch(goodsState.addedPhotos[i]).then(async res => {\r\n                        const blob = await res.blob()\r\n                        const file = new File([blob], goodsState.addedPhotos[i], { type: blob.type })\r\n                        return file\r\n                    })\r\n                })\r\n            }\r\n            const response = await sendFormData('/api/goods/update', data, files, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw (e)\r\n        }\r\n    }\r\n)\r\n\r\nexport const moySkladSync = createAsyncThunk(\r\n    'goods/sync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request('/api/goods/moy-sklad-sync', 'POST', null, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nexport const rmPhoto = createAsyncThunk(\r\n    '/goods/removePhoto',\r\n    async payload => {\r\n        await new Promise(resolve => setTimeout(resolve, 400))\r\n        return payload\r\n    }\r\n)\r\n\r\nexport const rcPhoto = createAsyncThunk(\r\n    '/goods/recoverPhoto',\r\n    async payload => {\r\n        await new Promise(resolve => setTimeout(resolve, 400))\r\n        return payload\r\n    }\r\n)\r\n\r\nconst findInTree = (obj, id) => {\r\n    if ( obj._id?.toString() === id?.toString() ) return obj\r\n    for ( let i in obj.entries ) {\r\n        const candidate = findInTree(obj.entries[i], id)\r\n        if ( candidate ) return candidate\r\n    }\r\n    return null\r\n}\r\n\r\nconst initialState = {\r\n    activeTab: 'wrap',\r\n    addedPhotos: [],\r\n    deletedPhotos: [],\r\n    form: { name: '', description: '' },\r\n    goods: { _id: '0' },\r\n    loadedPhotos: [],\r\n    loading: false,\r\n    photos: [],\r\n    selectedProduct: null,\r\n}\r\n\r\nconst goodsSlice = createSlice({\r\n    name: 'goodsSlice',\r\n    initialState,\r\n    reducers: {\r\n        addPhotos: (state, {payload}) => {\r\n            const photos = payload.map(src => ({ variant: CARD_SUCCESS, src, added: true }))\r\n            return {\r\n                ...state, addedPhotos: state.addedPhotos.concat(payload),\r\n                photos: state.photos.concat(photos)\r\n            }\r\n        },\r\n        moveImg: (state, {payload}) => {\r\n            const { hoverIndex, moveIndex } = payload\r\n            const photos = state.photos.map(item => item)\r\n            const moveImg = photos.splice(moveIndex, 1)\r\n            photos.splice(hoverIndex, 0, moveImg[0])\r\n            return { ...state, photos }\r\n        },\r\n        productClickHandler: (state, {payload}) => {\r\n            const selectedProduct = findInTree(state.goods, payload)\r\n            const { name, description, images, isGood } = selectedProduct\r\n            return isGood\r\n            ? {\r\n                ...state, selectedProduct,\r\n                form: { ...state.form, name, description: description ?? '' },\r\n                loadedPhotos: images,\r\n                photos: images.map(src => ({ variant: CARD_PRIMARY, src })),\r\n                deletedPhotos: [],\r\n                activeTab: initialState.activeTab\r\n            }\r\n            : { ...state, selectedProduct: null, form: initialState.form, loadedPhotos: [], photos: [], activeTab: initialState.activeTab }\r\n        },\r\n        setForm: (state, {payload}) => ({ ...state, form: { ...state.form, [payload.name]: payload.value } }),\r\n        tabChange: (state, {payload}) => ({ ...state, activeTab: payload }),\r\n        resetGoods: () => initialState\r\n    },\r\n    extraReducers: {\r\n        [getGoods.pending]: state => ({ ...state, loading: true }),\r\n        [getGoods.fulfilled]: (state, {payload}) => ({ ...state, goods: { ...state.goods, entries: payload }, loading: false }),\r\n        [getGoods.rejected]: state => ({ ...state, loading: false }),\r\n\r\n        [moySkladSync.pending]: state => ({ ...state, loading: true }),\r\n        [moySkladSync.fulfilled]: (state, {payload}) => ({ ...state, goods: { ...state.goods, entries: payload }, loading: false }),\r\n        [moySkladSync.rejected]: state => ({ ...state, loading: false }),\r\n\r\n        [rcPhoto.pending]: (state, {meta}) => ({\r\n            ...state,\r\n            photos: state.photos.map((item, index) => index === parseInt(meta.arg.idx) ? { ...item, classList: 'opacity-decrease' } : item)\r\n        }),\r\n        [rcPhoto.fulfilled]: (state, {payload}) => ({\r\n            ...state, deletedPhotos: state.deletedPhotos.filter(item => item !== state.photos[payload].src),\r\n            photos: state.photos.map((item, index) => parseInt(payload) === index ? { ...item, variant: CARD_PRIMARY, classList: null } : item)\r\n        }),\r\n\r\n        [rmPhoto.pending]: (state, {meta}) => ({\r\n            ...state,\r\n            photos: state.photos.map((item, index) => index === parseInt(meta.arg.idx) ? { ...item, classList: 'opacity-decrease' } : item)\r\n        }),\r\n        [rmPhoto.fulfilled]: (state, {payload}) => {\r\n            const { idx, loaded } = payload\r\n            return loaded === 'true' \r\n            ? {\r\n                ...state, deletedPhotos: state.deletedPhotos.concat([state.photos[parseInt(idx)].src]),\r\n                photos: state.photos.map((item, index) => parseInt(idx) === index ? { ...item, variant: CARD_SECONDARY, classList: null } : item)\r\n            }\r\n            : {\r\n                ...state, addedPhotos: state.addedPhotos.filter(item => item !== state.photos[parseInt(idx)].src),\r\n                photos: state.photos.filter((_, index) => parseInt(idx) !== index)\r\n            }\r\n        },\r\n\r\n        [updateGood.pending]: state => ({ ...state, loading: true }),\r\n        [updateGood.fulfilled]: (state, {payload}) => {\r\n            const { _id } = state.selectedProduct\r\n            const selectedProduct = findInTree({ ...initialState.goods, entries: payload }, _id.toString())\r\n            const { name, description, images } = selectedProduct\r\n            return {\r\n                ...state, selectedProduct,\r\n                goods: { ...initialState.goods, entries: payload },\r\n                form: { ...state.form, name, description: description ?? '' },\r\n                loadedPhotos: images,\r\n                photos: images.map(src => ({ variant: CARD_PRIMARY, src })),\r\n                addedPhotos: [],\r\n                deletedPhotos: [],\r\n                loading: false\r\n            }\r\n        },\r\n        [updateGood.rejected]: state => ({ ...state, loading: false }),\r\n    }\r\n})\r\n\r\nexport const { addPhotos, moveImg, productClickHandler, resetGoods, setForm, setPhotoState, tabChange } = goodsSlice.actions\r\n\r\nexport default goodsSlice.reducer","import React, { useRef } from 'react'\r\nimport { Card, CloseButton, Image } from 'react-bootstrap'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { moveImg, rcPhoto, rmPhoto } from '../../redux/goodsSlice'\r\nimport { CARD_PRIMARY, CARD_SECONDARY, CARD_SUCCESS } from '../../redux/types'\r\n\r\nconst ProductImage = ({ variant, src, index, classList }) => {\r\n    const dispatch = useDispatch()\r\n    const ref = useRef(null)\r\n\r\n    const removePhoto = event => {\r\n        dispatch(rmPhoto({\r\n            idx: event.target.dataset.index,\r\n            loaded: event.target.dataset.loaded\r\n        }))\r\n    }\r\n\r\n    const recoverPhoto = event => {\r\n        dispatch(rcPhoto(event.target.dataset.index))\r\n    }\r\n\r\n    const [_, drop] = useDrop({\r\n        accept: 'card',\r\n        hover: item => {\r\n            if ( !ref.current ) return\r\n\r\n            const moveIndex = item.index\r\n            const hoverIndex = index\r\n\r\n            if (moveIndex === hoverIndex) return\r\n            dispatch(moveImg({ moveIndex, hoverIndex }))\r\n            item.index = hoverIndex\r\n        }\r\n    })\r\n\r\n    const [a, drag] = useDrag({\r\n        type: 'card',\r\n        item: { index }\r\n    })\r\n\r\n    drag(drop(ref))\r\n\r\n    return (\r\n        <Card bg={variant} text=\"white\" className={`h-100 border-0 ${classList || \"\"}`} ref={ref}>\r\n            { variant === CARD_SUCCESS && <Card.Header>Не сохранено</Card.Header> }\r\n            { variant === CARD_PRIMARY && <Card.Header>Загружено</Card.Header> }\r\n            { variant === CARD_SECONDARY && <Card.Header>Исключено</Card.Header> }\r\n            <Card.Body className=\"position-relative d-flex product-image p-0 border-none\">\r\n                <Image src={src} fluid className=\"rounded-bottom\" />\r\n                { variant === CARD_SECONDARY ?\r\n                <button\r\n                    className=\"btn position-absolute center bg-white p-0 m-2 px-1 opacity-0\"\r\n                    data-index={index}\r\n                    onClick={recoverPhoto}\r\n                >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-clockwise\" viewBox=\"0 0 16 16\" data-index={index}>\r\n                        <path fill-rule=\"evenodd\" d=\"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\"/>\r\n                        <path d=\"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\"/>\r\n                    </svg>\r\n                </button>\r\n                :\r\n                <CloseButton\r\n                    className=\"position-absolute center bg-light m-2 opacity-0\"\r\n                    data-index={index}\r\n                    onClick={removePhoto}\r\n                    data-loaded={ variant === 'primary' }\r\n                /> }\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProductImage","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Col, Placeholder, Row } from 'react-bootstrap'\r\nimport AddAPhotoOutlinedIcon from '@mui/icons-material/AddAPhotoOutlined'\r\nimport ProductImage from './ProductImage'\r\nimport { addPhotos } from '../../redux/goodsSlice'\r\n\r\nconst Images = () => {\r\n    const { loading, photos } = useSelector(state => state.goodsState)\r\n    const dispatch = useDispatch()\r\n\r\n    const fileHandler = event => {\r\n        const sources = Array.from(event.target.files).map(item => URL.createObjectURL(item))\r\n        dispatch(addPhotos(sources))\r\n    }\r\n\r\n    return loading ? \r\n    (\r\n        <Row md={3} className=\"border border-top-0 rounded-bottom g-2 m-0 align-items-stretch\">\r\n            <Col>\r\n                <div style={{ minHeight: '10vh' }} className=\"rounded\">\r\n                    <Placeholder xs={12} />\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n    : (\r\n        <Row md={3} className=\"border border-top-0 rounded-bottom g-2 m-0 align-items-stretch p-2\">\r\n            {\r\n                photos.map(({variant, src, classList}, index) => \r\n                    <Col key={`$_image_${index}`}>\r\n                        <ProductImage\r\n                            classList={classList}\r\n                            variant={variant}\r\n                            src={src}\r\n                            index={index}\r\n                        />\r\n                    </Col>\r\n                )\r\n            }\r\n            <Col>\r\n                <Card className=\"h-100\">\r\n                    <Card.Header>\r\n                        <label className=\"text-primary\">\r\n                            Добавить фото...\r\n                            { !loading && <input\r\n                                type=\"file\"\r\n                                style={{ width: 0, height: 0, padding: 0, margin: 0 }}\r\n                                onInput={fileHandler}\r\n                                accept=\"image/*\"\r\n                                multiple\r\n                            /> }\r\n                        </label>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"d-flex\">\r\n                        <AddAPhotoOutlinedIcon className=\"m-auto text-secondary\" sx={{ fontSize: 80 }} />\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Images","import React, { useCallback } from 'react'\r\nimport { Button, Col, Form, Placeholder, Row, Tab, Tabs } from 'react-bootstrap'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setForm, tabChange, updateGood } from '../../redux/goodsSlice'\r\nimport Images from './Images'\r\n\r\nconst GoodsPanel = () => {\r\n    const { activeTab, form, loading, selectedProduct } = useSelector(state => state.goodsState)\r\n    const dispatch = useDispatch()\r\n\r\n    const formHandler = event => {\r\n        dispatch(setForm({ name: event.target.name, value: event.target.value }))\r\n    }\r\n\r\n    const updateHandler = () => {\r\n        dispatch(updateGood())\r\n    }\r\n\r\n    const tabHandler = data => {\r\n        dispatch(tabChange(data))\r\n    }\r\n\r\n    return loading ? (\r\n        <>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded h-100 mx-auto\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12}>\r\n                <Placeholder.Button xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12}>\r\n                <Placeholder.Button xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n            <Placeholder animation=\"glow\" xs={12} className=\"w-100 mt-auto\">\r\n                <Placeholder.Button variant=\"warning\" xs={12} className=\"mb-2\" />\r\n            </Placeholder>\r\n        </>\r\n    ) :\r\n    (\r\n        <div className=\"d-flex flex-column h-100\">\r\n            <p className=\"text-center mb-3\">{selectedProduct?.name ?? 'Товар не выбран'}</p>\r\n            { selectedProduct && \r\n                <>\r\n                    <Tabs activeKey={activeTab} onSelect={tabHandler}>\r\n                        <Tab eventKey=\"wrap\" title=\"Обложка\" className=\"mb-3\">\r\n                            <Row className=\"border border-top-0 rounded-bottom p-3 gx-2 m-0 align-items-stretch\">\r\n                                <Col sm={12}>\r\n                                    <Form>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Название</Form.Label>\r\n                                            <Form.Control type=\"text\" readOnly placeholder={form.name} />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Описание</Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"textarea\"\r\n                                                rows={3}\r\n                                                value={form.description}\r\n                                                name=\"description\"\r\n                                                onChange={formHandler}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab>\r\n                        <Tab eventKey=\"photos\" title=\"Изображения\" className=\"mb-3\" onSelect={tabHandler}>\r\n                            <DndProvider backend={HTML5Backend}>\r\n                                <Images />\r\n                            </DndProvider>\r\n                        </Tab>\r\n                        <Tab eventKey=\"fields\" title=\"Поля\" className=\"mb-3\" onSelect={tabHandler}></Tab>\r\n                    </Tabs>\r\n                    <div className=\"mt-auto ms-auto\">\r\n                        <Button variant=\"primary\" onClick={updateHandler} disabled={!selectedProduct || loading}>Сохранить</Button>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoodsPanel","import TreeItem from '@mui/lab/TreeItem'\r\nimport TreeView from '@mui/lab/TreeView'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { productClickHandler } from '../../redux/goodsSlice'\r\nimport { Placeholder } from 'react-bootstrap'\r\n\r\nconst GoodsTree = () => {\r\n    const { goods, loading } = useSelector(state => state.goodsState)\r\n    const dispatch = useDispatch()\r\n\r\n    const selectHandler = (_, nodeIds) => {\r\n        dispatch(productClickHandler(nodeIds))\r\n    }\r\n\r\n    const renderTree = nodes => (\r\n        <TreeItem key={nodes._id} nodeId={nodes._id} label={nodes.name}>\r\n            {\r\n                Array.isArray(nodes.entries)\r\n                ? nodes.entries.map(node => renderTree(node))\r\n                : null\r\n            }\r\n        </TreeItem>\r\n    )\r\n\r\n    return loading ? (\r\n        <>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded w-100 h-100\" />\r\n            </Placeholder>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded w-100 h-100\" />\r\n            </Placeholder>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded w-100 h-100\" />\r\n            </Placeholder>\r\n            <Placeholder as=\"p\" animation=\"glow\" xs={12}>\r\n                <Placeholder xs={12} className=\"rounded w-100 h-100\" />\r\n            </Placeholder>\r\n        </>\r\n    ) :\r\n    (\r\n        <TreeView\r\n            aria-label=\"rich object\"\r\n            defaultCollapseIcon={ <ExpandMoreIcon /> }\r\n            defaultExpanded={ ['0'] }\r\n            defaultExpandIcon={ <ChevronRightIcon /> }\r\n            onNodeSelect={selectHandler}\r\n            sx={{ height: '100%', flexGrow: 1, maxWidth: '100%', overflowY: 'auto' }}\r\n        >\r\n            { renderTree(goods) }\r\n        </TreeView>\r\n    )\r\n}\r\n\r\nexport default GoodsTree","import React, { useEffect } from 'react'\r\nimport { Button, Col, Container, OverlayTrigger, Row, Tooltip } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getGoods, moySkladSync, resetGoods } from '../../redux/goodsSlice'\r\nimport GoodsPanel from './GoodsPanel'\r\nimport GoodsTree from './GoodsTree'\r\n\r\nexport const GoodsPage = () => {\r\n    const { loading } = useSelector(state => state.goodsState)\r\n    const dispatch = useDispatch()\r\n\r\n    const syncHandler = () => {\r\n        dispatch(moySkladSync())\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getGoods())\r\n        return () => dispatch(resetGoods())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container className=\"py-4\">\r\n            <Row className=\"mb-3\">\r\n                <Col>\r\n                    <span className=\"fs-3\">Товары</span>\r\n                </Col>\r\n                <Col className=\"d-flex justify-content-end\">\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{ show: 200, hide: 200 }}\r\n                        overlay={\r\n                            <Tooltip>\r\n                                Получение актуальной информации из ПТК \"Мой склад\".\r\n                                Синхронизируются названия и цены товаров.\r\n                            </Tooltip>\r\n                        }\r\n                    >\r\n                        <Button variant=\"success\" onClick={syncHandler} disabled={loading}>Синхронизировать с \"Мой склад\"</Button>\r\n                    </OverlayTrigger>\r\n                    \r\n                </Col>\r\n            </Row>\r\n            <Row className=\"border px-2 py-4 bg-light rounded align-items-stretch\">\r\n                <Col xs={12} md={5}>\r\n                    <Container style={{ height: '70vh' }} className=\"bg-white rounded border overflow-scroll py-2\">\r\n                        <GoodsTree />\r\n                    </Container>\r\n                </Col>\r\n                <Col xs={12} md={7}>\r\n                    <Container className=\"bg-white rounded border py-2 h-100 pe-2\" style={{ overflowY: 'scroll' }}>\r\n                        <GoodsPanel />\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, { useCallback, useEffect, useState } from \"react\"\r\nimport { Button, Col, Container, Form, ListGroup, Placeholder, Row, Spinner } from \"react-bootstrap\"\r\nimport { NavLink, useParams } from \"react-router-dom\"\r\nimport { useAlert } from \"../../hooks/alert.hook\"\r\nimport { useHttp } from \"../../hooks/http.hook\"\r\n\r\nexport const UserPage = () => {\r\n    const [form, setForm] = useState({ avatar: '', name: '', login: '', pass: '' })\r\n    const [rights, setRights] = useState([\r\n        { name: 'users', view: false, edit: false, title: 'Пользователи' },\r\n        { name: 'categories', view: false, edit: false, title: 'Категории' },\r\n        { name: 'goods', view: false, edit: false, title: 'Товары' }\r\n    ])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const {request, loading} = useHttp()\r\n    const { successAlert } = useAlert()\r\n    const params = useParams()\r\n\r\n    const getUserById = useCallback(async id => {\r\n        setIsLoading(true)\r\n        try {\r\n            const { user, rights } = await request('/api/users/get-by-id', 'POST', { id })\r\n            const { avatar, name, login } = user\r\n            setForm(state => ({ ...state, avatar, name, login }))\r\n            setRights(state => state.map(item => {\r\n                const { view, edit } = rights[item.name] ?? { view: false, edit: false }\r\n                return { ...item, view, edit }\r\n            }))\r\n            setIsLoading(false)\r\n        }\r\n        catch {\r\n            setIsLoading(false)\r\n        }\r\n    }, [request])\r\n\r\n    const checkboxHandler = event => {\r\n        const name = event.target.getAttribute('data-name')\r\n        const value = event.target.getAttribute('data-value')\r\n        const checked = event.target.checked\r\n\r\n        setRights(state => state.map(item => {\r\n            if (item.name === name) {\r\n                return { ...item, [value]: checked }\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n\r\n    const createHandler = async () => {\r\n        try {\r\n            const { message } = await request('/api/users/create', 'POST', {form, rights})\r\n            successAlert(message)\r\n            setForm({ avatar: '', name: '', login: '', pass: '' })\r\n            setRights([\r\n                { name: 'users', view: false, edit: false, title: 'Пользователи' },\r\n                { name: 'categories', view: false, edit: false, title: 'Категории' },\r\n                { name: 'goods', view: false, edit: false, title: 'Товары' }\r\n            ])\r\n        }\r\n        catch {}\r\n    }\r\n\r\n    const updateHandler = async id => {\r\n        try {\r\n            const { message } = await request('/api/users/update', 'POST', {id, form, rights})\r\n            successAlert(message)\r\n            getUserById(id)\r\n        }\r\n        catch {}\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        params.id ? updateHandler(params.id) : createHandler()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ( 'id' in params ) {\r\n            getUserById(params.id)\r\n        }\r\n    }, [params, getUserById])\r\n\r\n    return (\r\n        <Container className=\"pt-4\">\r\n            {\r\n                params.id ? \r\n                <h3>Изменение пользователя</h3> :\r\n                <h3>Создание пользователя</h3>\r\n            }\r\n            <Row className=\"my-3\">\r\n                <Col sm={12} md={5}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Имя пользователя</Form.Label>\r\n                            {\r\n                                isLoading ?\r\n                                <Placeholder as=\"p\" animation=\"wave\">\r\n                                    <Placeholder xs={12} className=\"p-3 rounded\" bg=\"secondary\" />\r\n                                </Placeholder> :\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={form.name}\r\n                                    onChange={event => setForm(state => ({...state, [event.target.name]: event.target.value}))}\r\n                                />\r\n                            }\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Логин</Form.Label>\r\n                            {\r\n                                isLoading ?\r\n                                <Placeholder as=\"p\" animation=\"wave\">\r\n                                    <Placeholder xs={12} className=\"p-3 rounded\" bg=\"secondary\" />\r\n                                </Placeholder> :\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"login\"\r\n                                    value={form.login}\r\n                                    onChange={event => setForm(state => ({...state, [event.target.name]: event.target.value}))}\r\n                                />\r\n                            }\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Пароль</Form.Label>\r\n                            {\r\n                                isLoading ?\r\n                                <Placeholder as=\"p\" animation=\"wave\">\r\n                                    <Placeholder xs={12} className=\"p-3 rounded\" bg=\"secondary\" />\r\n                                </Placeholder> :\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"pass\"\r\n                                    value={form.pass}\r\n                                    onChange={event => setForm(state => ({...state, [event.target.name]: event.target.value}))}\r\n                                />\r\n                            }\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n                <Col sm={12} md={{ span: 5, offset: 1 }}>\r\n                    <p className=\"mb-2\">Права</p>\r\n                    <ListGroup>\r\n                            {\r\n                                rights.map(({ name, title, view, edit }) => (\r\n                                    <ListGroup.Item key={`key_${name}`}>\r\n                                        <p className=\"mb-1 fw-bold\">{title}</p>\r\n                                        <Form>\r\n                                            {\r\n                                                isLoading ?\r\n                                                <Placeholder as=\"p\" animation=\"wave\">\r\n                                                    <Placeholder xs={12} md={6} className=\"p-3 rounded\" bg=\"secondary\" />\r\n                                                </Placeholder> :\r\n                                                <div>\r\n                                                    <Form.Check\r\n                                                        inline\r\n                                                        type=\"checkbox\"\r\n                                                        label=\"Просмотр\"\r\n                                                        checked={view}\r\n                                                        className=\"me-4\"\r\n                                                        data-name={name}\r\n                                                        data-value=\"view\"\r\n                                                        onChange={checkboxHandler}\r\n                                                        disabled={edit}\r\n                                                    />\r\n                                                    <Form.Check\r\n                                                        inline\r\n                                                        type=\"checkbox\"\r\n                                                        label=\"Изменение\"\r\n                                                        checked={edit}\r\n                                                        data-name={name}\r\n                                                        data-value=\"edit\"\r\n                                                        onChange={checkboxHandler}\r\n                                                        disabled={!view}\r\n                                                    />\r\n                                                </div>\r\n                                            }\r\n                                        </Form>\r\n                                    </ListGroup.Item>\r\n                                ))\r\n                            }\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {\r\n                        isLoading ?\r\n                        <Placeholder.Button variant=\"primary\" xs={2} /> :\r\n                        <Button variant=\"primary\" type=\"button\" onClick={ loading ? null : submitHandler }>\r\n                            { loading ? <Spinner animation=\"border\" variant=\"primary\" size=\"sm\" /> : 'OK' }\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                <Col>\r\n                    <NavLink to=\"/admin/users\">Назад к списку пользователей</NavLink>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport { Button, Card, Col, Container, Form, Row, Tab, Tabs } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { setPhoto } from '../../redux/categorySlice'\r\n\r\nconst CategoryPage = () => {\r\n    const { selectedCategory, form } = useSelector(state => state.categoriesState)\r\n    const dispatch = useDispatch()\r\n    \r\n    const fileHandler = event => {\r\n        dispatch(setPhoto(event.target.files[0]))\r\n    }\r\n\r\n    return (\r\n            <Container className=\"py-4\">\r\n                <h3>Добавление раздела в {selectedCategory?.name}</h3>\r\n                <Tabs defaultActiveKey=\"props\">\r\n                    <Tab eventKey=\"props\" title=\"Свойства\">\r\n                        <Row className=\"border border-top-0 rounded-bottom p-3 m-0\">\r\n                            <Col xs=\"12\" md=\"6\">\r\n                                <Form style={{ height: '60vh', overflowY: 'scroll' }} >\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Название</Form.Label>\r\n                                        <Form.Control type=\"text\"></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Описание</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows=\"6\"></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                            <Col xs=\"12\" md={{ span: 5, offset: 1 }}>\r\n                                <Card>\r\n                                    <Card.Img variant=\"top\" height=\"330\" className=\"bg-light\" src={form.imgSrc} />\r\n                                    <Card.Body>\r\n                                        <Card.Text>Изображение категории</Card.Text>\r\n                                        <label className=\"btn btn-primary\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                style={{ width: 0, height: 0, margin: 0, padding: 0 }}\r\n                                                accept=\"image/jpeg\"\r\n                                                onInput={fileHandler}\r\n                                            />\r\n                                            Имзенить\r\n                                        </label>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Tab>\r\n                    <Tab eventKey=\"fileds\" title=\"Поля\" disabled={true}>\r\n                        Поля\r\n                    </Tab>\r\n                </Tabs>\r\n                <Row className=\"mt-4 ps-4\">\r\n                    <Col>\r\n                        <Button variant=\"primary\">OK</Button>\r\n                    </Col>\r\n                    <Col className=\"d-flex\">\r\n                        <NavLink to=\"/admin/categories\" className=\"mx-auto text-center\">Назад к списку категорий...</NavLink>\r\n                    </Col>\r\n                </Row>          \r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default CategoryPage","import React from 'react'\r\nimport { Card, Col } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst MainPageCard = ({header, body, link}) => (\r\n    <Col>\r\n        <Card border=\"success\">\r\n            <Card.Header>{header}</Card.Header>\r\n            <Card.Body>{body}</Card.Body>\r\n            <Card.Footer>\r\n                <NavLink to={link}>Детали...</NavLink>\r\n            </Card.Footer>\r\n        </Card>\r\n    </Col>\r\n)\r\n\r\nexport default MainPageCard","import React from \"react\"\r\nimport { Container, Row } from \"react-bootstrap\"\r\nimport MainPageCard from \"./MainPageCard\"\r\n\r\nconst MainPage = () => (\r\n    <Container className=\"py-4\">\r\n        <Row xs={1} md={3} className=\"g-4 align-items-stretch\">\r\n            <MainPageCard \r\n                header=\"Пользователи\"\r\n                body=\"Аккаунты пользователей, допущенных к управлению магазином\"\r\n                link=\"/admin/users\"\r\n            />\r\n            <MainPageCard \r\n                header=\"Поля\"\r\n                body=\"Список полей товаров, используемых для добавления характеристик фильтрации\"\r\n                link=\"/admin/fields\"\r\n            />\r\n            <MainPageCard \r\n                header=\"Категории\"\r\n                body=\"Архитектура каталога товаров, критерии группировки товаров на сайте\"\r\n                link=\"/admin/categories\"\r\n            />\r\n            <MainPageCard \r\n                header=\"Товары\"\r\n                body=\"Информация о конкретных изделиях, наличии на складах и ценах\"\r\n                link=\"/admin/goods\"\r\n            />\r\n        </Row>\r\n    </Container>\r\n)\r\n\r\nexport default MainPage","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport { request } from \"../API/http.api\"\r\nimport { alertSliceSet } from \"./alertSlice\"\r\n\r\nexport const getFields = createAsyncThunk(\r\n    'fields/get-all',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState } = thunkAPI.getState()\r\n            const response = await request('/api/fields/get-all', 'GET', null, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nexport const saveChanges = createAsyncThunk(\r\n    'fields/save',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const { authState, fieldsState } = thunkAPI.getState()\r\n            const { addedFields, removedFields } = fieldsState\r\n            const response = await request('/api/fields/save', 'POST', { addedFields, removedFields }, { Authorization: `Base ${authState.id}` })\r\n            return response\r\n        }\r\n        catch (e) {\r\n            const { dispatch } = thunkAPI\r\n            dispatch(alertSliceSet({ variant: 'danger', text: e.message }))\r\n            throw e\r\n        }\r\n    }\r\n)\r\n\r\nconst initialState = {\r\n    fields: [],\r\n    addForm: {\r\n        name: '', type: 'number'\r\n    },\r\n    addedFields: [],\r\n    removedFields: [],\r\n    loading: false\r\n}\r\n\r\nconst fieldsSlice = createSlice({\r\n    name: 'fieldsSlice',\r\n    initialState,\r\n    reducers: {\r\n        addFormHandler: (state, {payload}) => ({ ...state, addForm: { ...state.addForm, [payload.field]: payload.value } }),\r\n        addField: state => ({\r\n            ...state, addedFields: state.addedFields.concat({ ...state.addForm }),\r\n            addForm: { name: '', type: 'number' }\r\n        }),\r\n        removeField: (state, {payload}) => ({ ...state, removedFields: state.removedFields.concat(payload) }),\r\n        cancelRemove: (state, {payload}) => ({ ...state, removedFields: state.removedFields.filter(item => item.toString() !== payload.toString()) }),\r\n        cancelAdd: (state, {payload}) => ({ ...state, addedFields: state.addedFields.filter((_, index) => index.toString() !== payload.toString()) })\r\n    },\r\n    extraReducers: {\r\n        [getFields.pending]: state => ({ ...state, loading: true }),\r\n        [getFields.fulfilled]: (state, {payload}) => ({ ...state, fields: payload, loading: false }),\r\n        [getFields.rejected]: state => ({ ...state, loading: false }),\r\n\r\n        [saveChanges.pending]: state => ({ ...state, loading: true }),\r\n        [saveChanges.fulfilled]: (state, {payload}) => ({ ...state, fields: payload, loading: false, addedFields: [], removedFields: [] }),\r\n        [saveChanges.rejected]: state => ({ ...state, loading: false })\r\n    }\r\n})\r\n\r\nexport const { addFormHandler, addField, removeField, cancelRemove, cancelAdd } = fieldsSlice.actions\r\n\r\nexport default fieldsSlice.reducer","import React, { useEffect } from 'react'\r\nimport { Button, Col, Container, Form, Placeholder, Row, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addField, addFormHandler, cancelAdd, cancelRemove, getFields, removeField, saveChanges } from '../../redux/fieldsSlice'\r\n\r\nconst FieldsPage = () => {\r\n    const { addForm, addedFields, fields, removedFields, loading } = useSelector(state => state.fieldsState)\r\n    const dispatch = useDispatch()\r\n\r\n    const changeHandler = event => {\r\n        dispatch(addFormHandler({ field: event.target.name, value: event.target.value }))\r\n    }\r\n\r\n    const addHandler = () => {\r\n        dispatch(addField())\r\n    }\r\n\r\n    const removeHandler = event => {\r\n        dispatch(removeField(event.target.getAttribute('data-id')))\r\n    }\r\n\r\n    const cancelRemoveHandler = event => {\r\n        dispatch(cancelRemove(event.target.getAttribute('data-id')))\r\n    }\r\n\r\n    const cancelAddHandler = event => {\r\n        dispatch(cancelAdd(event.target.getAttribute('data-id')))\r\n    }\r\n\r\n    const saveHandler = () => {\r\n        dispatch(saveChanges())\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getFields())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container className=\"py-4\">\r\n            <h3>Поля</h3>\r\n            { loading && <Row xs={1} md={3} className=\"g-3 mb-3\">\r\n                {\r\n                    new Array(9).fill(true).map((_, index) => (\r\n                        <Col key={`ph_${index}`}>\r\n                            <Placeholder as=\"p\" animation=\"glow\" className=\"m-0 p-0 rounded\">\r\n                                <Placeholder xs={12} className=\"rounded p-4\" />\r\n                            </Placeholder>\r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row> }\r\n            { loading && <Placeholder animation=\"glow\"><Placeholder.Button xs={12} md={2} /></Placeholder> }\r\n            { !loading && <Table className=\"mb-3\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\">Наименование поля</th>\r\n                        <th className=\"text-center\">Тип данных</th>\r\n                        <th className=\"text-center\">Действие</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        fields.map(({_id, name, type}) => {\r\n                            const removed = removedFields.some(item => item.toString() === _id.toString())\r\n                            return <tr key={_id}>\r\n                                <td className={ removed ? \"text-muted\" : \"\" }>{name}</td>\r\n                                <td className={ removed ? \"text-muted text-center\" : \"text-center\" }>\r\n                                    {\r\n                                        [\r\n                                            {key: 'number', value: 'Числовой'},\r\n                                            {key: 'text', value: 'Текстовый'}\r\n                                        ].filter(({key}) => key === type).map(item => (<span key={_id + item.key}>{item.value}</span>))\r\n                                    }\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                    <Button size=\"sm\" data-id={_id}\r\n                                        variant={removed ? \"success\" : \"danger\" }\r\n                                        onClick={removed ? cancelRemoveHandler : removeHandler}\r\n                                    >\r\n                                        { removed ? <>Восстановить</> : <>Удалить</> }\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                    {\r\n                        addedFields.map(({name, type}, index) => (\r\n                            <tr key={`key_${index}`}>\r\n                                <td>{name}</td>\r\n                                <td className=\"text-center\">\r\n                                    {\r\n                                        [\r\n                                            {key: 'number', value: 'Числовой'},\r\n                                            {key: 'text', value: 'Текстовый'}\r\n                                        ].filter(({key}) => key === type).map(item => (<span key={index + item.key}>{item.value}</span>))\r\n                                    }\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                    <Button variant=\"secondary\" size=\"sm\" data-id={index} onClick={cancelAddHandler}>Отменить</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>\r\n                            <Form.Control type=\"text\" placeholder=\"Наименование\" value={addForm.name} onChange={changeHandler} name=\"name\" />\r\n                        </td>\r\n                        <td>\r\n                            <Form.Select value={addForm.type} onChange={changeHandler} name=\"type\">\r\n                                <option value=\"number\">Числовой</option>\r\n                                <option value=\"text\">Текстовый</option>\r\n                            </Form.Select>\r\n                        </td>\r\n                        <td className=\"text-center\">\r\n                            <Button variant=\"primary\" size=\"sm\" onClick={addHandler}\r\n                                disabled={ addForm.name === '' }\r\n                            >Добавить поле</Button>\r\n                        </td>\r\n                    </tr>\r\n                </tfoot>\r\n            </Table> }\r\n            { !loading && <div>\r\n                <Button variant=\"primary\" onClick={saveHandler}>Сохранить</Button>\r\n            </div> }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FieldsPage","import { BrowserRouter } from 'react-router-dom'\nimport { AlertComponent } from './components/AlertComponent';\nimport { HeaderComponent } from './components/HeaderComponent';\nimport { BrowserRoutes } from './Routes'\n\nfunction App() {\n  const routes = BrowserRoutes()\n\n  return (\n      <BrowserRouter>\n        <AlertComponent />\n        <HeaderComponent />\n        { routes }\n      </BrowserRouter>\n  );\n}\n\nexport default App;","import React from \"react\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginPage } from \"./pages/LoginPage\"\r\nimport { useSelector } from 'react-redux'\r\nimport { UsersPage } from \"./pages/users/UsersPage\"\r\nimport { CategoriesPage } from \"./pages/categories/CategoriesPage\"\r\nimport { GoodsPage } from \"./pages/goods/GoodsPage\"\r\nimport { UserPage } from \"./pages/users/UserPage\"\r\nimport CategoryPage from \"./pages/categories/CategoryPage\"\r\nimport MainPage from \"./pages/mainPage/MainPage\"\r\nimport FieldsPage from \"./pages/fields/FieldsPage\"\r\n\r\nexport const BrowserRoutes = () => {\r\n    const {id} = useSelector(state => state.authState)\r\n\r\n    if (id) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/admin/main\">\r\n                    <MainPage />\r\n                </Route>\r\n\r\n                <Route path=\"/admin/users\" exact>\r\n                    <UsersPage />\r\n                </Route>\r\n                <Route path=\"/admin/users/user\" exact>\r\n                    <UserPage />\r\n                </Route>\r\n                <Route path=\"/admin/users/user/:id\">\r\n                    <UserPage />\r\n                </Route>\r\n\r\n                <Route path=\"/admin/fields\">\r\n                    <FieldsPage />\r\n                </Route>\r\n\r\n                <Route path=\"/admin/categories\" exact>\r\n                    <CategoriesPage />\r\n                </Route>\r\n                <Route path=\"/admin/categories/category/:obj\">\r\n                    <CategoryPage />\r\n                </Route>\r\n\r\n                <Route path=\"/admin/goods\">\r\n                    <GoodsPage />\r\n                </Route>\r\n\r\n                <Redirect to=\"/admin/main\" />\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/admin/login\">\r\n                <LoginPage />\r\n            </Route>\r\n            <Redirect to=\"/admin/login\" />\r\n        </Switch>\r\n    )\r\n}","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport alertSlice from \"./alertSlice\"\r\nimport authSlice from \"./authSlice\"\r\nimport categorySlice from \"./categorySlice\"\r\nimport fieldsSlice from \"./fieldsSlice\"\r\nimport goodsSlice from \"./goodsSlice\"\r\n\r\nexport default configureStore({\r\n    middleware: (getDefaultMiddleware) => \r\n    getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: ['categorySlice/setPhoto']\r\n        }\r\n    }),\r\n    reducer: {\r\n        authState: authSlice,\r\n        alertState: alertSlice,\r\n        categoriesState: categorySlice,\r\n        fieldsState: fieldsSlice,\r\n        goodsState: goodsSlice\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}